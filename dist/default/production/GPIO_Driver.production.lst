

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Oct 13 00:17:53 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    30                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    31                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    33   000000                     
    34                           ; Version 2.40
    35                           ; Generated 17/11/2021 GMT
    36                           ; 
    37                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F4620 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69   000000                     
    70                           	psect	idataCOMRAM
    71   001690                     __pidataCOMRAM:
    72                           	callstack 0
    73                           
    74                           ;initializer for _port_register
    75   001690  80                 	db	128
    76   001691  0F                 	db	15
    77   001692  81                 	db	129
    78   001693  0F                 	db	15
    79   001694  82                 	db	130
    80   001695  0F                 	db	15
    81   001696  83                 	db	131
    82   001697  0F                 	db	15
    83   001698  84                 	db	132
    84   001699  0F                 	db	15
    85                           
    86                           ;initializer for _lat_register
    87   00169A  89                 	db	137
    88   00169B  0F                 	db	15
    89   00169C  8A                 	db	138
    90   00169D  0F                 	db	15
    91   00169E  8B                 	db	139
    92   00169F  0F                 	db	15
    93   0016A0  8C                 	db	140
    94   0016A1  0F                 	db	15
    95   0016A2  8D                 	db	141
    96   0016A3  0F                 	db	15
    97                           
    98                           ;initializer for _tris_register
    99   0016A4  92                 	db	146
   100   0016A5  0F                 	db	15
   101   0016A6  93                 	db	147
   102   0016A7  0F                 	db	15
   103   0016A8  94                 	db	148
   104   0016A9  0F                 	db	15
   105   0016AA  95                 	db	149
   106   0016AB  0F                 	db	15
   107   0016AC  96                 	db	150
   108   0016AD  0F                 	db	15
   109                           
   110                           ;initializer for _ret
   111   0016AE  01                 	db	1
   112                           
   113                           ;initializer for _led0
   114   0016AF  02                 	db	2
   115                           
   116                           	psect	smallconst
   117   001000                     __psmallconst:
   118                           	callstack 0
   119   001000  00                 	db	0
   120   001001  37                 	db	55
   121   001002  38                 	db	56
   122   001003  39                 	db	57
   123   001004  2F                 	db	47
   124   001005  34                 	db	52
   125   001006  35                 	db	53
   126   001007  36                 	db	54
   127   001008  2A                 	db	42
   128   001009  31                 	db	49
   129   00100A  32                 	db	50
   130   00100B  33                 	db	51
   131   00100C  2D                 	db	45
   132   00100D  23                 	db	35
   133   00100E  30                 	db	48
   134   00100F  3D                 	db	61
   135   001010  2B                 	db	43
   136   001011                     __end_of_btn_values:
   137                           	callstack 0
   138   000000                     _EECON2	set	4007
   139   000000                     _INTCON2bits	set	4081
   140   000000                     _ADCON1bits	set	4033
   141   000000                     _ADRESL	set	4035
   142   000000                     _ADRESH	set	4036
   143   000000                     _TRISD	set	3989
   144   000000                     _TRISC	set	3988
   145   000000                     _TRISB	set	3987
   146   000000                     _TRISE	set	3990
   147   000000                     _PORTBbits	set	3969
   148   000000                     _ADCON2bits	set	4032
   149   000000                     _ADCON0bits	set	4034
   150   000000                     _PORTE	set	3972
   151   000000                     _PORTD	set	3971
   152   000000                     _PORTC	set	3970
   153   000000                     _PORTB	set	3969
   154   000000                     _PORTA	set	3968
   155   000000                     _LATA	set	3977
   156   000000                     _TRISA	set	3986
   157   000000                     _INTCON3bits	set	4080
   158   000000                     _INTCONbits	set	4082
   159   000000                     _EECON1bits	set	4006
   160   000000                     _EEDATA	set	4008
   161   000000                     _EEADR	set	4009
   162   000000                     _EEADRH	set	4010
   163   000000                     _LATE	set	3981
   164   000000                     _LATD	set	3980
   165   000000                     _LATC	set	3979
   166   000000                     _LATB	set	3978
   167   001011                     STR_1:
   168   001011  25                 	db	37
   169   001012  69                 	db	105	;'i'
   170   001013  00                 	db	0
   171   001014  00                 	db	0	; dummy byte at the end
   172   000000                     
   173                           ; #config settings
   174                           
   175                           	psect	cinit
   176   00165A                     __pcinit:
   177                           	callstack 0
   178   00165A                     start_initialization:
   179                           	callstack 0
   180   00165A                     __initialization:
   181                           	callstack 0
   182                           
   183                           ; Initialize objects allocated to COMRAM (32 bytes)
   184                           ; load TBLPTR registers with __pidataCOMRAM
   185   00165A  0E90               	movlw	low __pidataCOMRAM
   186   00165C  6EF6               	movwf	tblptrl,c
   187   00165E  0E16               	movlw	high __pidataCOMRAM
   188   001660  6EF7               	movwf	tblptrh,c
   189   001662  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   190   001664  6EF8               	movwf	tblptru,c
   191   001666  EE00  F001         	lfsr	0,__pdataCOMRAM
   192   00166A  EE10 F020          	lfsr	1,32
   193   00166E                     copy_data0:
   194   00166E  0009               	tblrd		*+
   195   001670  CFF5 FFEE          	movff	tablat,postinc0
   196   001674  50E5               	movf	postdec1,w,c
   197   001676  50E1               	movf	fsr1l,w,c
   198   001678  E1FA               	bnz	copy_data0
   199                           
   200                           ; Clear objects allocated to COMRAM (31 bytes)
   201   00167A  EE00  F021         	lfsr	0,__pbssCOMRAM
   202   00167E  0E1F               	movlw	31
   203   001680                     clear_0:
   204   001680  6AEE               	clrf	postinc0,c
   205   001682  06E8               	decf	wreg,f,c
   206   001684  E1FD               	bnz	clear_0
   207   001686                     end_of_initialization:
   208                           	callstack 0
   209   001686                     __end_of__initialization:
   210                           	callstack 0
   211   001686  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   212   001688  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   213   00168A  0100               	movlb	0
   214   00168C  EF7C  F00A         	goto	_main	;jump to C main() function
   215                           
   216                           	psect	bssCOMRAM
   217   000021                     __pbssCOMRAM:
   218                           	callstack 0
   219   000021                     _RB7_InterruptHandler:
   220                           	callstack 0
   221   000021                     	ds	2
   222   000023                     _RB6_InterruptHandler:
   223                           	callstack 0
   224   000023                     	ds	2
   225   000025                     _RB5_InterruptHandler:
   226                           	callstack 0
   227   000025                     	ds	2
   228   000027                     _RB4_InterruptHandler:
   229                           	callstack 0
   230   000027                     	ds	2
   231   000029                     _INT2_InterruptHandler:
   232                           	callstack 0
   233   000029                     	ds	2
   234   00002B                     _INT1_InterruptHandler:
   235                           	callstack 0
   236   00002B                     	ds	2
   237   00002D                     _INT0_InterruptHandler:
   238                           	callstack 0
   239   00002D                     	ds	2
   240   00002F                     _epprom_cnt:
   241                           	callstack 0
   242   00002F                     	ds	1
   243   000030                     relay_turn_off@F3047:
   244                           	callstack 0
   245   000030                     	ds	1
   246   000031                     relay_turn_on@F3042:
   247                           	callstack 0
   248   000031                     	ds	1
   249   000032                     relay_initialize@F3037:
   250                           	callstack 0
   251   000032                     	ds	1
   252   000033                     led_toggle_logic@F3058:
   253                           	callstack 0
   254   000033                     	ds	1
   255   000034                     led_turn_off@F3053:
   256                           	callstack 0
   257   000034                     	ds	1
   258   000035                     led_turn_on@F3048:
   259                           	callstack 0
   260   000035                     	ds	1
   261   000036                     led_initialize@F3043:
   262                           	callstack 0
   263   000036                     	ds	1
   264   000037                     Dc_motor_stop@F3067:
   265                           	callstack 0
   266   000037                     	ds	1
   267   000038                     Dc_motor_stop@F3065:
   268                           	callstack 0
   269   000038                     	ds	1
   270   000039                     Dc_motor_turn_right@F3060:
   271                           	callstack 0
   272   000039                     	ds	1
   273   00003A                     Dc_motor_turn_right@F3058:
   274                           	callstack 0
   275   00003A                     	ds	1
   276   00003B                     Dc_motor_turn_left@F3053:
   277                           	callstack 0
   278   00003B                     	ds	1
   279   00003C                     Dc_motor_turn_left@F3051:
   280                           	callstack 0
   281   00003C                     	ds	1
   282   00003D                     Dc_motor_initialize@F3044:
   283                           	callstack 0
   284   00003D                     	ds	1
   285   00003E                     Dc_motor_initialize@F3042:
   286                           	callstack 0
   287   00003E                     	ds	1
   288   00003F                     _value:
   289                           	callstack 0
   290   00003F                     	ds	1
   291                           
   292                           	psect	dataCOMRAM
   293   000001                     __pdataCOMRAM:
   294                           	callstack 0
   295   000001                     _port_register:
   296                           	callstack 0
   297   000001                     	ds	10
   298   00000B                     _lat_register:
   299                           	callstack 0
   300   00000B                     	ds	10
   301   000015                     _tris_register:
   302                           	callstack 0
   303   000015                     	ds	10
   304   00001F                     _ret:
   305                           	callstack 0
   306   00001F                     	ds	1
   307   000020                     _led0:
   308                           	callstack 0
   309   000020                     	ds	1
   310                           
   311                           	psect	cstackCOMRAM
   312   000040                     __pcstackCOMRAM:
   313                           	callstack 0
   314   000040                     gpio_pin_direction_init@_pin_config_t:
   315                           	callstack 0
   316   000040                     gpio_pin_write_logic@_pin_config_t:
   317                           	callstack 0
   318   000040                     Data_EEPROM_WriteByte@bAdd:
   319                           	callstack 0
   320   000040                     Data_EEPROM_ReadByte@bAdd:
   321                           	callstack 0
   322                           
   323                           ; 2 bytes @ 0x0
   324   000040                     	ds	2
   325   000042                     ??_gpio_pin_direction_init:
   326   000042                     gpio_pin_write_logic@logic:
   327                           	callstack 0
   328   000042                     Data_EEPROM_WriteByte@bData:
   329                           	callstack 0
   330   000042                     Data_EEPROM_ReadByte@bData:
   331                           	callstack 0
   332                           
   333                           ; 2 bytes @ 0x2
   334   000042                     	ds	1
   335   000043                     ??_gpio_pin_write_logic:
   336   000043                     Data_EEPROM_WriteByte@Global_Interrupt_Status:
   337                           	callstack 0
   338                           
   339                           ; 1 bytes @ 0x3
   340   000043                     	ds	1
   341   000044                     _Data_EEPROM_WriteByte$1747:
   342                           	callstack 0
   343   000044                     Data_EEPROM_ReadByte@ret:
   344                           	callstack 0
   345                           
   346                           ; 1 bytes @ 0x4
   347   000044                     	ds	1
   348   000045                     _Data_EEPROM_WriteByte$1748:
   349                           	callstack 0
   350   000045                     _Data_EEPROM_ReadByte$1761:
   351                           	callstack 0
   352                           
   353                           ; 1 bytes @ 0x5
   354   000045                     	ds	1
   355   000046                     _Data_EEPROM_ReadByte$1762:
   356                           	callstack 0
   357                           
   358                           ; 1 bytes @ 0x6
   359   000046                     	ds	2
   360   000048                     gpio_pin_direction_init@ret:
   361                           	callstack 0
   362                           
   363                           ; 1 bytes @ 0x8
   364   000048                     	ds	1
   365   000049                     gpio_pin_write_logic@ret:
   366                           	callstack 0
   367                           
   368                           ; 1 bytes @ 0x9
   369   000049                     	ds	1
   370   00004A                     led_initialize@led:
   371                           	callstack 0
   372   00004A                     led_turn_on@led:
   373                           	callstack 0
   374                           
   375                           ; 2 bytes @ 0xA
   376   00004A                     	ds	2
   377   00004C                     ??_led_initialize:
   378   00004C                     ??_led_turn_on:
   379                           
   380                           ; 1 bytes @ 0xC
   381   00004C                     	ds	1
   382   00004D                     led_initialize@ret:
   383                           	callstack 0
   384   00004D                     led_turn_on@ret:
   385                           	callstack 0
   386                           
   387                           ; 1 bytes @ 0xD
   388   00004D                     	ds	1
   389   00004E                     led_initialize@pin_obj:
   390                           	callstack 0
   391   00004E                     led_turn_on@pin_obj:
   392                           	callstack 0
   393                           
   394                           ; 1 bytes @ 0xE
   395   00004E                     	ds	1
   396   00004F                     ??_main:
   397                           
   398                           ; 1 bytes @ 0xF
   399   00004F                     	ds	2
   400                           
   401 ;;
   402 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   403 ;;
   404 ;; *************** function _main *****************
   405 ;; Defined at:
   406 ;;		line 276 in file "Application.c"
   407 ;; Parameters:    Size  Location     Type
   408 ;;		None
   409 ;; Auto vars:     Size  Location     Type
   410 ;;		None
   411 ;; Return value:  Size  Location     Type
   412 ;;                  2  789[None  ] int 
   413 ;; Registers used:
   414 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   415 ;; Tracked objects:
   416 ;;		On entry : 0/0
   417 ;;		On exit  : 0/0
   418 ;;		Unchanged: 0/0
   419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   422 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   423 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   424 ;;Total ram usage:        2 bytes
   425 ;; Hardware stack levels required when called: 5
   426 ;; This function calls:
   427 ;;		_Application_initialize
   428 ;;		_Data_EEPROM_ReadByte
   429 ;;		_Data_EEPROM_WriteByte
   430 ;;		_led_turn_on
   431 ;; This function is called by:
   432 ;;		Startup code after reset
   433 ;; This function uses a non-reentrant model
   434 ;;
   435                           
   436                           	psect	text0
   437   0014F8                     __ptext0:
   438                           	callstack 0
   439   0014F8                     _main:
   440                           	callstack 26
   441   0014F8                     
   442                           ;Application.c: 277:     Application_initialize();
   443   0014F8  EC58  F00B         	call	_Application_initialize	;wreg free
   444   0014FC                     
   445                           ;Application.c: 278:     ret = Data_EEPROM_WriteByte(0x3ff, epprom_cnt);
   446   0014FC  0E03               	movlw	3
   447   0014FE  6E41               	movwf	(Data_EEPROM_WriteByte@bAdd+1)^0,c
   448   001500  6840               	setf	Data_EEPROM_WriteByte@bAdd^0,c
   449   001502  C02F  F042         	movff	_epprom_cnt,Data_EEPROM_WriteByte@bData
   450   001506  ECB9  F00A         	call	_Data_EEPROM_WriteByte	;wreg free
   451   00150A  6E1F               	movwf	_ret^0,c
   452   00150C                     l3755:
   453                           
   454                           ;Application.c: 280:        epprom_cnt++;
   455   00150C  2A2F               	incf	_epprom_cnt^0,f,c
   456   00150E                     
   457                           ;Application.c: 281:        ret = Data_EEPROM_WriteByte(0x3ff, epprom_cnt);
   458   00150E  0E03               	movlw	3
   459   001510  6E41               	movwf	(Data_EEPROM_WriteByte@bAdd+1)^0,c
   460   001512  6840               	setf	Data_EEPROM_WriteByte@bAdd^0,c
   461   001514  C02F  F042         	movff	_epprom_cnt,Data_EEPROM_WriteByte@bData
   462   001518  ECB9  F00A         	call	_Data_EEPROM_WriteByte	;wreg free
   463   00151C  6E1F               	movwf	_ret^0,c
   464   00151E                     
   465                           ;Application.c: 282:        _delay(300000);
   466   00151E  0E02               	movlw	2
   467   001520  6E50               	movwf	(??_main+1)^0,c
   468   001522  0E86               	movlw	134
   469   001524  6E4F               	movwf	??_main^0,c
   470   001526  0E99               	movlw	153
   471   001528                     u2507:
   472   001528  2EE8               	decfsz	wreg,f,c
   473   00152A  D7FE               	bra	u2507
   474   00152C  2E4F               	decfsz	??_main^0,f,c
   475   00152E  D7FC               	bra	u2507
   476   001530  2E50               	decfsz	(??_main+1)^0,f,c
   477   001532  D7FA               	bra	u2507
   478   001534  F000               	nop	
   479   001536                     
   480                           ;Application.c: 283:        ret = Data_EEPROM_ReadByte(0x3ff, &value);
   481   001536  0E03               	movlw	3
   482   001538  6E41               	movwf	(Data_EEPROM_ReadByte@bAdd+1)^0,c
   483   00153A  6840               	setf	Data_EEPROM_ReadByte@bAdd^0,c
   484   00153C  0E3F               	movlw	low _value
   485   00153E  6E42               	movwf	Data_EEPROM_ReadByte@bData^0,c
   486   001540  0E00               	movlw	high _value
   487   001542  6E43               	movwf	(Data_EEPROM_ReadByte@bData+1)^0,c
   488   001544  ECF5  F00A         	call	_Data_EEPROM_ReadByte	;wreg free
   489   001548  6E1F               	movwf	_ret^0,c
   490   00154A                     
   491                           ;Application.c: 284:        if(value == 10){
   492   00154A  0E0A               	movlw	10
   493   00154C  183F               	xorwf	_value^0,w,c
   494   00154E  A4D8               	btfss	status,2,c
   495   001550  EFAC  F00A         	goto	u2491
   496   001554  EFAE  F00A         	goto	u2490
   497   001558                     u2491:
   498   001558  EF86  F00A         	goto	l3755
   499   00155C                     u2490:
   500   00155C                     
   501                           ;Application.c: 285:            ret = led_turn_on(&led0);
   502   00155C  0E20               	movlw	low _led0
   503   00155E  6E4A               	movwf	led_turn_on@led^0,c
   504   001560  0E00               	movlw	high _led0
   505   001562  6E4B               	movwf	(led_turn_on@led+1)^0,c
   506   001564  EC3C  F00A         	call	_led_turn_on	;wreg free
   507   001568  6E1F               	movwf	_ret^0,c
   508   00156A  EF86  F00A         	goto	l3755
   509   00156E  EF07  F000         	goto	start
   510   001572                     __end_of_main:
   511                           	callstack 0
   512                           
   513 ;; *************** function _led_turn_on *****************
   514 ;; Defined at:
   515 ;;		line 37 in file "ECU_Layer/Ecu_led.c"
   516 ;; Parameters:    Size  Location     Type
   517 ;;  led             2   10[COMRAM] PTR const struct .
   518 ;;		 -> led0(1), 
   519 ;; Auto vars:     Size  Location     Type
   520 ;;  pin_obj         1   14[COMRAM] struct .
   521 ;;  ret             1   13[COMRAM] unsigned char 
   522 ;; Return value:  Size  Location     Type
   523 ;;                  1    wreg      unsigned char 
   524 ;; Registers used:
   525 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   526 ;; Tracked objects:
   527 ;;		On entry : 0/0
   528 ;;		On exit  : 0/0
   529 ;;		Unchanged: 0/0
   530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   531 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   532 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   533 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   534 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   535 ;;Total ram usage:        5 bytes
   536 ;; Hardware stack levels used: 1
   537 ;; Hardware stack levels required when called: 3
   538 ;; This function calls:
   539 ;;		_gpio_pin_write_logic
   540 ;; This function is called by:
   541 ;;		_main
   542 ;; This function uses a non-reentrant model
   543 ;;
   544                           
   545                           	psect	text1
   546   001478                     __ptext1:
   547                           	callstack 0
   548   001478                     _led_turn_on:
   549                           	callstack 27
   550   001478                     
   551                           ;ECU_Layer/Ecu_led.c: 38:     STD_ReturnType ret = (STD_ReturnType)0x01;
   552   001478  0E01               	movlw	1
   553   00147A  6E4D               	movwf	led_turn_on@ret^0,c
   554   00147C                     
   555                           ;ECU_Layer/Ecu_led.c: 40:     if(led == ((void*)0)) ret = (STD_ReturnType)0x00;
   556   00147C  504A               	movf	led_turn_on@led^0,w,c
   557   00147E  104B               	iorwf	(led_turn_on@led+1)^0,w,c
   558   001480  A4D8               	btfss	status,2,c
   559   001482  EF45  F00A         	goto	u1881
   560   001486  EF47  F00A         	goto	u1880
   561   00148A                     u1881:
   562   00148A  EF4B  F00A         	goto	l290
   563   00148E                     u1880:
   564   00148E  0E00               	movlw	0
   565   001490  6E4D               	movwf	led_turn_on@ret^0,c
   566   001492  EF7A  F00A         	goto	l3123
   567   001496                     l290:
   568                           
   569                           ;ECU_Layer/Ecu_led.c: 42:        pin_config_t pin_obj = {
   570   001496  C035  F04E         	movff	led_turn_on@F3048,led_turn_on@pin_obj
   571   00149A  C04A  FFD9         	movff	led_turn_on@led,fsr2l
   572   00149E  C04B  FFDA         	movff	led_turn_on@led+1,fsr2h
   573   0014A2  50DF               	movf	223,w,c
   574   0014A4  0B0F               	andlw	15
   575   0014A6  6E4C               	movwf	??_led_turn_on^0,c
   576   0014A8  504E               	movf	led_turn_on@pin_obj^0,w,c
   577   0014AA  184C               	xorwf	??_led_turn_on^0,w,c
   578   0014AC  0BF8               	andlw	-8
   579   0014AE  184C               	xorwf	??_led_turn_on^0,w,c
   580   0014B0  6E4E               	movwf	led_turn_on@pin_obj^0,c
   581   0014B2  C04A  FFD9         	movff	led_turn_on@led,fsr2l
   582   0014B6  C04B  FFDA         	movff	led_turn_on@led+1,fsr2h
   583   0014BA  38DF               	swapf	223,w,c
   584   0014BC  0B07               	andlw	7
   585   0014BE  6E4C               	movwf	??_led_turn_on^0,c
   586   0014C0  464C               	rlncf	??_led_turn_on^0,f,c
   587   0014C2  464C               	rlncf	??_led_turn_on^0,f,c
   588   0014C4  464C               	rlncf	??_led_turn_on^0,f,c
   589   0014C6  504E               	movf	led_turn_on@pin_obj^0,w,c
   590   0014C8  184C               	xorwf	??_led_turn_on^0,w,c
   591   0014CA  0BC7               	andlw	-57
   592   0014CC  184C               	xorwf	??_led_turn_on^0,w,c
   593   0014CE  6E4E               	movwf	led_turn_on@pin_obj^0,c
   594   0014D0  9C4E               	bcf	led_turn_on@pin_obj^0,6,c
   595   0014D2  C04A  FFD9         	movff	led_turn_on@led,fsr2l
   596   0014D6  C04B  FFDA         	movff	led_turn_on@led+1,fsr2h
   597   0014DA  AEDF               	btfss	indf2,7,c
   598   0014DC  D002               	bra	u1895
   599   0014DE  8E4E               	bsf	led_turn_on@pin_obj^0,7,c
   600   0014E0  D001               	bra	u1897
   601   0014E2                     u1895:
   602   0014E2  9E4E               	bcf	led_turn_on@pin_obj^0,7,c
   603   0014E4                     u1897:
   604   0014E4                     
   605                           ;ECU_Layer/Ecu_led.c: 48:         gpio_pin_write_logic(&pin_obj, GPIO_HIGH);
   606   0014E4  0E4E               	movlw	low led_turn_on@pin_obj
   607   0014E6  6E40               	movwf	gpio_pin_write_logic@_pin_config_t^0,c
   608   0014E8  0E00               	movlw	high led_turn_on@pin_obj
   609   0014EA  6E41               	movwf	(gpio_pin_write_logic@_pin_config_t+1)^0,c
   610   0014EC  0E01               	movlw	1
   611   0014EE  6E42               	movwf	gpio_pin_write_logic@logic^0,c
   612   0014F0  ECBC  F008         	call	_gpio_pin_write_logic	;wreg free
   613   0014F4                     l3123:
   614                           
   615                           ;ECU_Layer/Ecu_led.c: 50:     return ret;
   616   0014F4  504D               	movf	led_turn_on@ret^0,w,c
   617   0014F6  0012               	return		;funcret
   618   0014F8                     __end_of_led_turn_on:
   619                           	callstack 0
   620                           
   621 ;; *************** function _Data_EEPROM_WriteByte *****************
   622 ;; Defined at:
   623 ;;		line 20 in file "MCAL_Layer/EEPROM/hal_eeprom.c"
   624 ;; Parameters:    Size  Location     Type
   625 ;;  bAdd            2    0[COMRAM] unsigned short 
   626 ;;  bData           1    2[COMRAM] unsigned char 
   627 ;; Auto vars:     Size  Location     Type
   628 ;;  Global_Inter    1    3[COMRAM] unsigned char 
   629 ;;  ret             1    0        unsigned char 
   630 ;; Return value:  Size  Location     Type
   631 ;;                  1    wreg      unsigned char 
   632 ;; Registers used:
   633 ;;		wreg, status,2, status,0
   634 ;; Tracked objects:
   635 ;;		On entry : 0/0
   636 ;;		On exit  : 0/0
   637 ;;		Unchanged: 0/0
   638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   639 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   640 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   642 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   643 ;;Total ram usage:        6 bytes
   644 ;; Hardware stack levels used: 1
   645 ;; Hardware stack levels required when called: 2
   646 ;; This function calls:
   647 ;;		Nothing
   648 ;; This function is called by:
   649 ;;		_main
   650 ;; This function uses a non-reentrant model
   651 ;;
   652                           
   653                           	psect	text2
   654   001572                     __ptext2:
   655                           	callstack 0
   656   001572                     _Data_EEPROM_WriteByte:
   657                           	callstack 28
   658   001572                     
   659                           ;MCAL_Layer/EEPROM/hal_eeprom.c: 23:     uint8 Global_Interrupt_Status = INTCONbits.GIE;
   660   001572  0E00               	movlw	0
   661   001574  BEF2               	btfsc	242,7,c	;volatile
   662   001576  0E01               	movlw	1
   663   001578  6E43               	movwf	Data_EEPROM_WriteByte@Global_Interrupt_Status^0,c
   664   00157A                     
   665                           ;MCAL_Layer/EEPROM/hal_eeprom.c: 25:     EEADRH = (uint8)((bAdd >> 8) && 0x03);
   666   00157A  0E00               	movlw	0
   667   00157C  6E44               	movwf	_Data_EEPROM_WriteByte$1747^0,c
   668   00157E  5041               	movf	(Data_EEPROM_WriteByte@bAdd+1)^0,w,c
   669   001580  0A00               	xorlw	0
   670   001582  B4D8               	btfsc	status,2,c
   671   001584  EFC6  F00A         	goto	u1901
   672   001588  EFC8  F00A         	goto	u1900
   673   00158C                     u1901:
   674   00158C  EFCA  F00A         	goto	l3139
   675   001590                     u1900:
   676   001590  0E01               	movlw	1
   677   001592  6E44               	movwf	_Data_EEPROM_WriteByte$1747^0,c
   678   001594                     l3139:
   679   001594  C044  FFAA         	movff	_Data_EEPROM_WriteByte$1747,4010	;volatile
   680                           
   681                           ;MCAL_Layer/EEPROM/hal_eeprom.c: 26:     EEADR = ((bAdd) && 0xFF);
   682   001598  0E00               	movlw	0
   683   00159A  6E45               	movwf	_Data_EEPROM_WriteByte$1748^0,c
   684   00159C  5040               	movf	Data_EEPROM_WriteByte@bAdd^0,w,c
   685   00159E  1041               	iorwf	(Data_EEPROM_WriteByte@bAdd+1)^0,w,c
   686   0015A0  B4D8               	btfsc	status,2,c
   687   0015A2  EFD5  F00A         	goto	u1911
   688   0015A6  EFD7  F00A         	goto	u1910
   689   0015AA                     u1911:
   690   0015AA  EFD9  F00A         	goto	l3145
   691   0015AE                     u1910:
   692   0015AE  0E01               	movlw	1
   693   0015B0  6E45               	movwf	_Data_EEPROM_WriteByte$1748^0,c
   694   0015B2                     l3145:
   695   0015B2  C045  FFA9         	movff	_Data_EEPROM_WriteByte$1748,4009	;volatile
   696   0015B6                     
   697                           ;MCAL_Layer/EEPROM/hal_eeprom.c: 28:     EEDATA = bData;
   698   0015B6  C042  FFA8         	movff	Data_EEPROM_WriteByte@bData,4008	;volatile
   699   0015BA                     
   700                           ;MCAL_Layer/EEPROM/hal_eeprom.c: 30:     EECON1bits.EEPGD = 0;
   701   0015BA  9EA6               	bcf	166,7,c	;volsfr
   702   0015BC                     
   703                           ;MCAL_Layer/EEPROM/hal_eeprom.c: 31:     EECON1bits.CFGS = 0;
   704   0015BC  9CA6               	bcf	166,6,c	;volsfr
   705   0015BE                     
   706                           ;MCAL_Layer/EEPROM/hal_eeprom.c: 33:     EECON1bits.WREN = 1;
   707   0015BE  84A6               	bsf	166,2,c	;volsfr
   708   0015C0                     
   709                           ;MCAL_Layer/EEPROM/hal_eeprom.c: 35:     (INTCONbits.GIE = 0);
   710   0015C0  9EF2               	bcf	242,7,c	;volatile
   711                           
   712                           ;MCAL_Layer/EEPROM/hal_eeprom.c: 37:     EECON2 = 0x55;
   713   0015C2  0E55               	movlw	85
   714   0015C4  6EA7               	movwf	167,c	;volsfr
   715                           
   716                           ;MCAL_Layer/EEPROM/hal_eeprom.c: 38:     EECON2 = 0xAA;
   717   0015C6  0EAA               	movlw	170
   718   0015C8  6EA7               	movwf	167,c	;volsfr
   719   0015CA                     
   720                           ;MCAL_Layer/EEPROM/hal_eeprom.c: 40:     EECON1bits.WR = 1;
   721   0015CA  82A6               	bsf	166,1,c	;volsfr
   722   0015CC                     l818:
   723   0015CC  B2A6               	btfsc	166,1,c	;volsfr
   724   0015CE  EFEB  F00A         	goto	u1921
   725   0015D2  EFED  F00A         	goto	u1920
   726   0015D6                     u1921:
   727   0015D6  EFE6  F00A         	goto	l818
   728   0015DA                     u1920:
   729   0015DA                     
   730                           ;MCAL_Layer/EEPROM/hal_eeprom.c: 44:     EECON1bits.WREN = 0;
   731   0015DA  94A6               	bcf	166,2,c	;volsfr
   732                           
   733                           ;MCAL_Layer/EEPROM/hal_eeprom.c: 46:     INTCONbits.GIE = Global_Interrupt_Status;
   734   0015DC  B043               	btfsc	Data_EEPROM_WriteByte@Global_Interrupt_Status^0,0,c
   735   0015DE  D002               	bra	u1935
   736   0015E0  9EF2               	bcf	242,7,c	;volatile
   737   0015E2  D001               	bra	u1936
   738   0015E4                     u1935:
   739   0015E4  8EF2               	bsf	242,7,c	;volatile
   740   0015E6                     u1936:
   741   0015E6                     
   742                           ;MCAL_Layer/EEPROM/hal_eeprom.c: 47:     return ret;
   743   0015E6  0E01               	movlw	1
   744   0015E8  0012               	return		;funcret
   745   0015EA                     __end_of_Data_EEPROM_WriteByte:
   746                           	callstack 0
   747                           
   748 ;; *************** function _Data_EEPROM_ReadByte *****************
   749 ;; Defined at:
   750 ;;		line 49 in file "MCAL_Layer/EEPROM/hal_eeprom.c"
   751 ;; Parameters:    Size  Location     Type
   752 ;;  bAdd            2    0[COMRAM] unsigned short 
   753 ;;  bData           2    2[COMRAM] PTR unsigned char 
   754 ;;		 -> value(1), 
   755 ;; Auto vars:     Size  Location     Type
   756 ;;  ret             1    4[COMRAM] unsigned char 
   757 ;; Return value:  Size  Location     Type
   758 ;;                  1    wreg      unsigned char 
   759 ;; Registers used:
   760 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   761 ;; Tracked objects:
   762 ;;		On entry : 0/0
   763 ;;		On exit  : 0/0
   764 ;;		Unchanged: 0/0
   765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   766 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   767 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   769 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   770 ;;Total ram usage:        7 bytes
   771 ;; Hardware stack levels used: 1
   772 ;; Hardware stack levels required when called: 2
   773 ;; This function calls:
   774 ;;		Nothing
   775 ;; This function is called by:
   776 ;;		_main
   777 ;; This function uses a non-reentrant model
   778 ;;
   779                           
   780                           	psect	text3
   781   0015EA                     __ptext3:
   782                           	callstack 0
   783   0015EA                     _Data_EEPROM_ReadByte:
   784                           	callstack 28
   785   0015EA                     
   786                           ;MCAL_Layer/EEPROM/hal_eeprom.c: 50:     STD_ReturnType ret = (STD_ReturnType)0x01;
   787   0015EA  0E01               	movlw	1
   788   0015EC  6E44               	movwf	Data_EEPROM_ReadByte@ret^0,c
   789   0015EE                     
   790                           ;MCAL_Layer/EEPROM/hal_eeprom.c: 51:     if(bData == ((void*)0)) ret = (STD_ReturnType)0
      +                          x00;
   791   0015EE  5042               	movf	Data_EEPROM_ReadByte@bData^0,w,c
   792   0015F0  1043               	iorwf	(Data_EEPROM_ReadByte@bData+1)^0,w,c
   793   0015F2  A4D8               	btfss	status,2,c
   794   0015F4  EFFE  F00A         	goto	u1941
   795   0015F8  EF00  F00B         	goto	u1940
   796   0015FC                     u1941:
   797   0015FC  EF04  F00B         	goto	l3169
   798   001600                     u1940:
   799   001600  0E00               	movlw	0
   800   001602  6E44               	movwf	Data_EEPROM_ReadByte@ret^0,c
   801   001604  EF2B  F00B         	goto	l3191
   802   001608                     l3169:
   803                           
   804                           ;MCAL_Layer/EEPROM/hal_eeprom.c: 54:         EEADRH = (uint8)((bAdd >> 8) && 0x03);
   805   001608  0E00               	movlw	0
   806   00160A  6E45               	movwf	_Data_EEPROM_ReadByte$1761^0,c
   807   00160C  5041               	movf	(Data_EEPROM_ReadByte@bAdd+1)^0,w,c
   808   00160E  0A00               	xorlw	0
   809   001610  B4D8               	btfsc	status,2,c
   810   001612  EF0D  F00B         	goto	u1951
   811   001616  EF0F  F00B         	goto	u1950
   812   00161A                     u1951:
   813   00161A  EF11  F00B         	goto	l3175
   814   00161E                     u1950:
   815   00161E  0E01               	movlw	1
   816   001620  6E45               	movwf	_Data_EEPROM_ReadByte$1761^0,c
   817   001622                     l3175:
   818   001622  C045  FFAA         	movff	_Data_EEPROM_ReadByte$1761,4010	;volatile
   819                           
   820                           ;MCAL_Layer/EEPROM/hal_eeprom.c: 55:         EEADR = ((bAdd) && 0xFF);
   821   001626  0E00               	movlw	0
   822   001628  6E46               	movwf	_Data_EEPROM_ReadByte$1762^0,c
   823   00162A  5040               	movf	Data_EEPROM_ReadByte@bAdd^0,w,c
   824   00162C  1041               	iorwf	(Data_EEPROM_ReadByte@bAdd+1)^0,w,c
   825   00162E  B4D8               	btfsc	status,2,c
   826   001630  EF1C  F00B         	goto	u1961
   827   001634  EF1E  F00B         	goto	u1960
   828   001638                     u1961:
   829   001638  EF20  F00B         	goto	l3181
   830   00163C                     u1960:
   831   00163C  0E01               	movlw	1
   832   00163E  6E46               	movwf	_Data_EEPROM_ReadByte$1762^0,c
   833   001640                     l3181:
   834   001640  C046  FFA9         	movff	_Data_EEPROM_ReadByte$1762,4009	;volatile
   835   001644                     
   836                           ;MCAL_Layer/EEPROM/hal_eeprom.c: 57:         EECON1bits.RD = 1;
   837   001644  80A6               	bsf	166,0,c	;volsfr
   838   001646                     
   839                           ;MCAL_Layer/EEPROM/hal_eeprom.c: 59:         __nop();
   840   001646  F000               	nop	
   841   001648                     
   842                           ;MCAL_Layer/EEPROM/hal_eeprom.c: 60:         __nop();
   843   001648  F000               	nop	
   844   00164A                     
   845                           ;MCAL_Layer/EEPROM/hal_eeprom.c: 62:         *bData = EEDATA;
   846   00164A  C042  FFD9         	movff	Data_EEPROM_ReadByte@bData,fsr2l
   847   00164E  C043  FFDA         	movff	Data_EEPROM_ReadByte@bData+1,fsr2h
   848   001652  CFA8 FFDF          	movff	4008,indf2	;volatile
   849   001656                     l3191:
   850                           
   851                           ;MCAL_Layer/EEPROM/hal_eeprom.c: 64:     return ret;
   852   001656  5044               	movf	Data_EEPROM_ReadByte@ret^0,w,c
   853   001658  0012               	return		;funcret
   854   00165A                     __end_of_Data_EEPROM_ReadByte:
   855                           	callstack 0
   856                           
   857 ;; *************** function _Application_initialize *****************
   858 ;; Defined at:
   859 ;;		line 293 in file "Application.c"
   860 ;; Parameters:    Size  Location     Type
   861 ;;		None
   862 ;; Auto vars:     Size  Location     Type
   863 ;;		None
   864 ;; Return value:  Size  Location     Type
   865 ;;                  1    wreg      void 
   866 ;; Registers used:
   867 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   868 ;; Tracked objects:
   869 ;;		On entry : 0/0
   870 ;;		On exit  : 0/0
   871 ;;		Unchanged: 0/0
   872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   877 ;;Total ram usage:        0 bytes
   878 ;; Hardware stack levels used: 1
   879 ;; Hardware stack levels required when called: 4
   880 ;; This function calls:
   881 ;;		_led_initialize
   882 ;; This function is called by:
   883 ;;		_main
   884 ;; This function uses a non-reentrant model
   885 ;;
   886                           
   887                           	psect	text4
   888   0016B0                     __ptext4:
   889                           	callstack 0
   890   0016B0                     _Application_initialize:
   891                           	callstack 26
   892   0016B0                     
   893                           ;Application.c: 294:     ret = led_initialize(&led0);
   894   0016B0  0E20               	movlw	low _led0
   895   0016B2  6E4A               	movwf	led_initialize@led^0,c
   896   0016B4  0E00               	movlw	high _led0
   897   0016B6  6E4B               	movwf	(led_initialize@led+1)^0,c
   898   0016B8  ECF0  F009         	call	_led_initialize	;wreg free
   899   0016BC  6E1F               	movwf	_ret^0,c
   900   0016BE  0012               	return		;funcret
   901   0016C0                     __end_of_Application_initialize:
   902                           	callstack 0
   903                           
   904 ;; *************** function _led_initialize *****************
   905 ;; Defined at:
   906 ;;		line 20 in file "ECU_Layer/Ecu_led.c"
   907 ;; Parameters:    Size  Location     Type
   908 ;;  led             2   10[COMRAM] PTR const struct .
   909 ;;		 -> led0(1), 
   910 ;; Auto vars:     Size  Location     Type
   911 ;;  pin_obj         1   14[COMRAM] struct .
   912 ;;  ret             1   13[COMRAM] unsigned char 
   913 ;; Return value:  Size  Location     Type
   914 ;;                  1    wreg      unsigned char 
   915 ;; Registers used:
   916 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   917 ;; Tracked objects:
   918 ;;		On entry : 0/0
   919 ;;		On exit  : 0/0
   920 ;;		Unchanged: 0/0
   921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   922 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   923 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   924 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   925 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   926 ;;Total ram usage:        5 bytes
   927 ;; Hardware stack levels used: 1
   928 ;; Hardware stack levels required when called: 3
   929 ;; This function calls:
   930 ;;		_gpio_pin_direction_init
   931 ;;		_gpio_pin_write_logic
   932 ;; This function is called by:
   933 ;;		_Application_initialize
   934 ;; This function uses a non-reentrant model
   935 ;;
   936                           
   937                           	psect	text5
   938   0013E0                     __ptext5:
   939                           	callstack 0
   940   0013E0                     _led_initialize:
   941                           	callstack 26
   942   0013E0                     
   943                           ;ECU_Layer/Ecu_led.c: 21:     STD_ReturnType ret = (STD_ReturnType)0x01;
   944   0013E0  0E01               	movlw	1
   945   0013E2  6E4D               	movwf	led_initialize@ret^0,c
   946   0013E4                     
   947                           ;ECU_Layer/Ecu_led.c: 22:     if(led == ((void*)0)) ret = (STD_ReturnType)0x00;
   948   0013E4  504A               	movf	led_initialize@led^0,w,c
   949   0013E6  104B               	iorwf	(led_initialize@led+1)^0,w,c
   950   0013E8  A4D8               	btfss	status,2,c
   951   0013EA  EFF9  F009         	goto	u1821
   952   0013EE  EFFB  F009         	goto	u1820
   953   0013F2                     u1821:
   954   0013F2  EFFF  F009         	goto	l283
   955   0013F6                     u1820:
   956   0013F6  0E00               	movlw	0
   957   0013F8  6E4D               	movwf	led_initialize@ret^0,c
   958   0013FA  EF3A  F00A         	goto	l3053
   959   0013FE                     l283:
   960                           
   961                           ;ECU_Layer/Ecu_led.c: 24:        pin_config_t pin_obj = {
   962   0013FE  C036  F04E         	movff	led_initialize@F3043,led_initialize@pin_obj
   963   001402  C04A  FFD9         	movff	led_initialize@led,fsr2l
   964   001406  C04B  FFDA         	movff	led_initialize@led+1,fsr2h
   965   00140A  50DF               	movf	223,w,c
   966   00140C  0B0F               	andlw	15
   967   00140E  6E4C               	movwf	??_led_initialize^0,c
   968   001410  504E               	movf	led_initialize@pin_obj^0,w,c
   969   001412  184C               	xorwf	??_led_initialize^0,w,c
   970   001414  0BF8               	andlw	-8
   971   001416  184C               	xorwf	??_led_initialize^0,w,c
   972   001418  6E4E               	movwf	led_initialize@pin_obj^0,c
   973   00141A  C04A  FFD9         	movff	led_initialize@led,fsr2l
   974   00141E  C04B  FFDA         	movff	led_initialize@led+1,fsr2h
   975   001422  38DF               	swapf	223,w,c
   976   001424  0B07               	andlw	7
   977   001426  6E4C               	movwf	??_led_initialize^0,c
   978   001428  464C               	rlncf	??_led_initialize^0,f,c
   979   00142A  464C               	rlncf	??_led_initialize^0,f,c
   980   00142C  464C               	rlncf	??_led_initialize^0,f,c
   981   00142E  504E               	movf	led_initialize@pin_obj^0,w,c
   982   001430  184C               	xorwf	??_led_initialize^0,w,c
   983   001432  0BC7               	andlw	-57
   984   001434  184C               	xorwf	??_led_initialize^0,w,c
   985   001436  6E4E               	movwf	led_initialize@pin_obj^0,c
   986   001438  9C4E               	bcf	led_initialize@pin_obj^0,6,c
   987   00143A  C04A  FFD9         	movff	led_initialize@led,fsr2l
   988   00143E  C04B  FFDA         	movff	led_initialize@led+1,fsr2h
   989   001442  AEDF               	btfss	indf2,7,c
   990   001444  D002               	bra	u1835
   991   001446  8E4E               	bsf	led_initialize@pin_obj^0,7,c
   992   001448  D001               	bra	u1837
   993   00144A                     u1835:
   994   00144A  9E4E               	bcf	led_initialize@pin_obj^0,7,c
   995   00144C                     u1837:
   996   00144C                     
   997                           ;ECU_Layer/Ecu_led.c: 30:         gpio_pin_direction_init(&pin_obj);
   998   00144C  0E4E               	movlw	low led_initialize@pin_obj
   999   00144E  6E40               	movwf	gpio_pin_direction_init@_pin_config_t^0,c
  1000   001450  0E00               	movlw	high led_initialize@pin_obj
  1001   001452  6E41               	movwf	(gpio_pin_direction_init@_pin_config_t+1)^0,c
  1002   001454  EC0B  F008         	call	_gpio_pin_direction_init	;wreg free
  1003   001458                     
  1004                           ;ECU_Layer/Ecu_led.c: 31:         gpio_pin_write_logic(&pin_obj, led->led_status);
  1005   001458  0E4E               	movlw	low led_initialize@pin_obj
  1006   00145A  6E40               	movwf	gpio_pin_write_logic@_pin_config_t^0,c
  1007   00145C  0E00               	movlw	high led_initialize@pin_obj
  1008   00145E  6E41               	movwf	(gpio_pin_write_logic@_pin_config_t+1)^0,c
  1009   001460  C04A  FFD9         	movff	led_initialize@led,fsr2l
  1010   001464  C04B  FFDA         	movff	led_initialize@led+1,fsr2h
  1011   001468  0E00               	movlw	0
  1012   00146A  BEDF               	btfsc	indf2,7,c
  1013   00146C  0E01               	movlw	1
  1014   00146E  6E42               	movwf	gpio_pin_write_logic@logic^0,c
  1015   001470  ECBC  F008         	call	_gpio_pin_write_logic	;wreg free
  1016   001474                     l3053:
  1017                           
  1018                           ;ECU_Layer/Ecu_led.c: 33:     return ret;
  1019   001474  504D               	movf	led_initialize@ret^0,w,c
  1020   001476  0012               	return		;funcret
  1021   001478                     __end_of_led_initialize:
  1022                           	callstack 0
  1023                           
  1024 ;; *************** function _gpio_pin_write_logic *****************
  1025 ;; Defined at:
  1026 ;;		line 70 in file "MCAL_Layer/hal_gpio.c"
  1027 ;; Parameters:    Size  Location     Type
  1028 ;;  _pin_config_    2    0[COMRAM] PTR const struct .
  1029 ;;		 -> relay_turn_off@relayy(1), relay_turn_on@relayy(1), relay_initialize@relayy(1), led_turn_off@pin_obj(1), 
  1030 ;;		 -> led_turn_on@pin_obj(1), led_initialize@pin_obj(1), Dc_motor_stop@dc_motor_pin_2(1), Dc_motor_stop@dc_motor_pin_1
      +(1), 
  1031 ;;		 -> Dc_motor_turn_right@dc_motor_pin_2(1), Dc_motor_turn_right@dc_motor_pin_1(1), Dc_motor_turn_left@dc_motor_pin_2(
      +1), Dc_motor_turn_left@dc_motor_pin_1(1), 
  1032 ;;		 -> Dc_motor_initialize@dc_motor_pin_2(1), Dc_motor_initialize@dc_motor_pin_1(1), 
  1033 ;;  logic           1    2[COMRAM] enum E2965
  1034 ;; Auto vars:     Size  Location     Type
  1035 ;;  ret             1    9[COMRAM] unsigned char 
  1036 ;; Return value:  Size  Location     Type
  1037 ;;                  1    wreg      unsigned char 
  1038 ;; Registers used:
  1039 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1040 ;; Tracked objects:
  1041 ;;		On entry : 0/0
  1042 ;;		On exit  : 0/0
  1043 ;;		Unchanged: 0/0
  1044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1045 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1046 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1047 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1048 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1049 ;;Total ram usage:       10 bytes
  1050 ;; Hardware stack levels used: 1
  1051 ;; Hardware stack levels required when called: 2
  1052 ;; This function calls:
  1053 ;;		Nothing
  1054 ;; This function is called by:
  1055 ;;		_led_initialize
  1056 ;;		_led_turn_on
  1057 ;;		_keypad_initialize
  1058 ;;		_keypad_get_value
  1059 ;;		_segment_initialize
  1060 ;;		_segment_write_num
  1061 ;;		_Dc_motor_initialize
  1062 ;;		_Dc_motor_turn_left
  1063 ;;		_Dc_motor_turn_right
  1064 ;;		_Dc_motor_stop
  1065 ;;		_lcd_4_bit_initialize
  1066 ;;		_lcd_4_bit_send_command
  1067 ;;		_lcd_4_bit_send_char_data
  1068 ;;		_lcd_8_bit_initialize
  1069 ;;		_lcd_8_bit_send_command
  1070 ;;		_lcd_8_bit_send_char_data
  1071 ;;		_lcd_4bit_send_t
  1072 ;;		_lcd_8bit_send_t
  1073 ;;		_led_turn_off
  1074 ;;		_relay_initialize
  1075 ;;		_relay_turn_on
  1076 ;;		_relay_turn_off
  1077 ;; This function uses a non-reentrant model
  1078 ;;
  1079                           
  1080                           	psect	text6
  1081   001178                     __ptext6:
  1082                           	callstack 0
  1083   001178                     _gpio_pin_write_logic:
  1084                           	callstack 27
  1085   001178                     
  1086                           ;MCAL_Layer/hal_gpio.c: 71:     STD_ReturnType ret = (STD_ReturnType)0x01;
  1087   001178  0E01               	movlw	1
  1088   00117A  6E49               	movwf	gpio_pin_write_logic@ret^0,c
  1089   00117C                     
  1090                           ;MCAL_Layer/hal_gpio.c: 72:     if(_pin_config_t == ((void*)0) || (_pin_config_t->port >
      +                           5 - 1) || (_pin_config_t->pin > 8 - 1)) ret = (STD_ReturnType)0x00;
  1091   00117C  5040               	movf	gpio_pin_write_logic@_pin_config_t^0,w,c
  1092   00117E  1041               	iorwf	(gpio_pin_write_logic@_pin_config_t+1)^0,w,c
  1093   001180  B4D8               	btfsc	status,2,c
  1094   001182  EFC5  F008         	goto	u1731
  1095   001186  EFC7  F008         	goto	u1730
  1096   00118A                     u1731:
  1097   00118A  EFE7  F008         	goto	l2967
  1098   00118E                     u1730:
  1099   00118E  C040  FFD9         	movff	gpio_pin_write_logic@_pin_config_t,fsr2l
  1100   001192  C041  FFDA         	movff	gpio_pin_write_logic@_pin_config_t+1,fsr2h
  1101   001196  50DF               	movf	223,w,c
  1102   001198  0B07               	andlw	7
  1103   00119A  6E43               	movwf	??_gpio_pin_write_logic^0,c
  1104   00119C  0E05               	movlw	5
  1105   00119E  6043               	cpfslt	??_gpio_pin_write_logic^0,c
  1106   0011A0  EFD4  F008         	goto	u1741
  1107   0011A4  EFD6  F008         	goto	u1740
  1108   0011A8                     u1741:
  1109   0011A8  EFE7  F008         	goto	l2967
  1110   0011AC                     u1740:
  1111   0011AC  C040  FFD9         	movff	gpio_pin_write_logic@_pin_config_t,fsr2l
  1112   0011B0  C041  FFDA         	movff	gpio_pin_write_logic@_pin_config_t+1,fsr2h
  1113   0011B4  30DF               	rrcf	223,w,c
  1114   0011B6  32E8               	rrcf	wreg,f,c
  1115   0011B8  32E8               	rrcf	wreg,f,c
  1116   0011BA  0B07               	andlw	7
  1117   0011BC  6E43               	movwf	??_gpio_pin_write_logic^0,c
  1118   0011BE  0E07               	movlw	7
  1119   0011C0  6443               	cpfsgt	??_gpio_pin_write_logic^0,c
  1120   0011C2  EFE5  F008         	goto	u1751
  1121   0011C6  EFE7  F008         	goto	u1750
  1122   0011CA                     u1751:
  1123   0011CA  EF4A  F009         	goto	l2975
  1124   0011CE                     u1750:
  1125   0011CE                     l2967:
  1126   0011CE  0E00               	movlw	0
  1127   0011D0  6E49               	movwf	gpio_pin_write_logic@ret^0,c
  1128   0011D2  EF5F  F009         	goto	l2977
  1129   0011D6                     l2969:
  1130                           
  1131                           ;MCAL_Layer/hal_gpio.c: 76:                 (*lat_register[_pin_config_t->port] &= ~(1 <
      +                          < _pin_config_t->pin));
  1132   0011D6  C040  FFD9         	movff	gpio_pin_write_logic@_pin_config_t,fsr2l
  1133   0011DA  C041  FFDA         	movff	gpio_pin_write_logic@_pin_config_t+1,fsr2h
  1134   0011DE  30DF               	rrcf	223,w,c
  1135   0011E0  32E8               	rrcf	wreg,f,c
  1136   0011E2  32E8               	rrcf	wreg,f,c
  1137   0011E4  0B07               	andlw	7
  1138   0011E6  6E43               	movwf	??_gpio_pin_write_logic^0,c
  1139   0011E8  0E01               	movlw	1
  1140   0011EA  6E44               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1141   0011EC  2A43               	incf	??_gpio_pin_write_logic^0,f,c
  1142   0011EE  EFFB  F008         	goto	u1764
  1143   0011F2                     u1765:
  1144   0011F2  90D8               	bcf	status,0,c
  1145   0011F4  3644               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1146   0011F6                     u1764:
  1147   0011F6  2E43               	decfsz	??_gpio_pin_write_logic^0,f,c
  1148   0011F8  EFF9  F008         	goto	u1765
  1149   0011FC  5044               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1150   0011FE  0AFF               	xorlw	255
  1151   001200  6E45               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1152   001202  C040  FFD9         	movff	gpio_pin_write_logic@_pin_config_t,fsr2l
  1153   001206  C041  FFDA         	movff	gpio_pin_write_logic@_pin_config_t+1,fsr2h
  1154   00120A  50DF               	movf	223,w,c
  1155   00120C  0B07               	andlw	7
  1156   00120E  6E46               	movwf	(??_gpio_pin_write_logic+3)^0,c
  1157   001210  5046               	movf	(??_gpio_pin_write_logic+3)^0,w,c
  1158   001212  0D02               	mullw	2
  1159   001214  0E0B               	movlw	low _lat_register
  1160   001216  24F3               	addwf	243,w,c
  1161   001218  6ED9               	movwf	fsr2l,c
  1162   00121A  0E00               	movlw	high _lat_register
  1163   00121C  20F4               	addwfc	prodh,w,c
  1164   00121E  6EDA               	movwf	fsr2h,c
  1165   001220  CFDE F047          	movff	postinc2,??_gpio_pin_write_logic+4
  1166   001224  CFDD F048          	movff	postdec2,??_gpio_pin_write_logic+5
  1167   001228  C047  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  1168   00122C  C048  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  1169   001230  5045               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1170   001232  16DF               	andwf	indf2,f,c
  1171                           
  1172                           ;MCAL_Layer/hal_gpio.c: 77:                 break;
  1173   001234  EF5F  F009         	goto	l2977
  1174   001238                     l2971:
  1175                           
  1176                           ;MCAL_Layer/hal_gpio.c: 79:                 (*lat_register[_pin_config_t->port] |= (1 <<
      +                           _pin_config_t->pin));
  1177   001238  C040  FFD9         	movff	gpio_pin_write_logic@_pin_config_t,fsr2l
  1178   00123C  C041  FFDA         	movff	gpio_pin_write_logic@_pin_config_t+1,fsr2h
  1179   001240  30DF               	rrcf	223,w,c
  1180   001242  32E8               	rrcf	wreg,f,c
  1181   001244  32E8               	rrcf	wreg,f,c
  1182   001246  0B07               	andlw	7
  1183   001248  6E43               	movwf	??_gpio_pin_write_logic^0,c
  1184   00124A  0E01               	movlw	1
  1185   00124C  6E44               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1186   00124E  2A43               	incf	??_gpio_pin_write_logic^0,f,c
  1187   001250  EF2C  F009         	goto	u1774
  1188   001254                     u1775:
  1189   001254  90D8               	bcf	status,0,c
  1190   001256  3644               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1191   001258                     u1774:
  1192   001258  2E43               	decfsz	??_gpio_pin_write_logic^0,f,c
  1193   00125A  EF2A  F009         	goto	u1775
  1194   00125E  C040  FFD9         	movff	gpio_pin_write_logic@_pin_config_t,fsr2l
  1195   001262  C041  FFDA         	movff	gpio_pin_write_logic@_pin_config_t+1,fsr2h
  1196   001266  50DF               	movf	223,w,c
  1197   001268  0B07               	andlw	7
  1198   00126A  6E45               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1199   00126C  5045               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1200   00126E  0D02               	mullw	2
  1201   001270  0E0B               	movlw	low _lat_register
  1202   001272  24F3               	addwf	243,w,c
  1203   001274  6ED9               	movwf	fsr2l,c
  1204   001276  0E00               	movlw	high _lat_register
  1205   001278  20F4               	addwfc	prodh,w,c
  1206   00127A  6EDA               	movwf	fsr2h,c
  1207   00127C  CFDE F046          	movff	postinc2,??_gpio_pin_write_logic+3
  1208   001280  CFDD F047          	movff	postdec2,??_gpio_pin_write_logic+4
  1209   001284  C046  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  1210   001288  C047  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  1211   00128C  5044               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1212   00128E  12DF               	iorwf	indf2,f,c
  1213                           
  1214                           ;MCAL_Layer/hal_gpio.c: 80:                 break;
  1215   001290  EF5F  F009         	goto	l2977
  1216   001294                     l2975:
  1217   001294  5042               	movf	gpio_pin_write_logic@logic^0,w,c
  1218   001296  6E43               	movwf	??_gpio_pin_write_logic^0,c
  1219   001298  6A44               	clrf	(??_gpio_pin_write_logic+1)^0,c
  1220                           
  1221                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1222                           ; Switch size 1, requested type "simple"
  1223                           ; Number of cases is 1, Range of values is 0 to 0
  1224                           ; switch strategies available:
  1225                           ; Name         Instructions Cycles
  1226                           ; simple_byte            4     3 (average)
  1227                           ;	Chosen strategy is simple_byte
  1228   00129A  5044               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1229   00129C  0A00               	xorlw	0	; case 0
  1230   00129E  B4D8               	btfsc	status,2,c
  1231   0012A0  EF54  F009         	goto	l3775
  1232   0012A4  EFE7  F008         	goto	l2967
  1233   0012A8                     l3775:
  1234                           
  1235                           ; Switch size 1, requested type "simple"
  1236                           ; Number of cases is 2, Range of values is 0 to 1
  1237                           ; switch strategies available:
  1238                           ; Name         Instructions Cycles
  1239                           ; simple_byte            7     4 (average)
  1240                           ;	Chosen strategy is simple_byte
  1241   0012A8  5043               	movf	??_gpio_pin_write_logic^0,w,c
  1242   0012AA  0A00               	xorlw	0	; case 0
  1243   0012AC  B4D8               	btfsc	status,2,c
  1244   0012AE  EFEB  F008         	goto	l2969
  1245   0012B2  0A01               	xorlw	1	; case 1
  1246   0012B4  B4D8               	btfsc	status,2,c
  1247   0012B6  EF1C  F009         	goto	l2971
  1248   0012BA  EFE7  F008         	goto	l2967
  1249   0012BE                     l2977:
  1250                           
  1251                           ;MCAL_Layer/hal_gpio.c: 84:     return ret;
  1252   0012BE  5049               	movf	gpio_pin_write_logic@ret^0,w,c
  1253   0012C0  0012               	return		;funcret
  1254   0012C2                     __end_of_gpio_pin_write_logic:
  1255                           	callstack 0
  1256                           
  1257 ;; *************** function _gpio_pin_direction_init *****************
  1258 ;; Defined at:
  1259 ;;		line 24 in file "MCAL_Layer/hal_gpio.c"
  1260 ;; Parameters:    Size  Location     Type
  1261 ;;  _pin_config_    2    0[COMRAM] PTR const struct .
  1262 ;;		 -> relay_initialize@relayy(1), led_initialize@pin_obj(1), Dc_motor_initialize@dc_motor_pin_2(1), Dc_motor_initializ
      +e@dc_motor_pin_1(1), 
  1263 ;; Auto vars:     Size  Location     Type
  1264 ;;  ret             1    8[COMRAM] unsigned char 
  1265 ;; Return value:  Size  Location     Type
  1266 ;;                  1    wreg      unsigned char 
  1267 ;; Registers used:
  1268 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1269 ;; Tracked objects:
  1270 ;;		On entry : 0/0
  1271 ;;		On exit  : 0/0
  1272 ;;		Unchanged: 0/0
  1273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1274 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1275 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1276 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1277 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1278 ;;Total ram usage:        9 bytes
  1279 ;; Hardware stack levels used: 1
  1280 ;; Hardware stack levels required when called: 2
  1281 ;; This function calls:
  1282 ;;		Nothing
  1283 ;; This function is called by:
  1284 ;;		_led_initialize
  1285 ;;		_keypad_initialize
  1286 ;;		_button_initialize
  1287 ;;		_segment_initialize
  1288 ;;		_Dc_motor_initialize
  1289 ;;		_lcd_4_bit_initialize
  1290 ;;		_lcd_8_bit_initialize
  1291 ;;		_relay_initialize
  1292 ;;		_Interrupt_RBx_Init
  1293 ;;		_Interrupt_INTx_Pin
  1294 ;; This function uses a non-reentrant model
  1295 ;;
  1296                           
  1297                           	psect	text7
  1298   001016                     __ptext7:
  1299                           	callstack 0
  1300   001016                     _gpio_pin_direction_init:
  1301                           	callstack 26
  1302   001016                     
  1303                           ;MCAL_Layer/hal_gpio.c: 25:     STD_ReturnType ret = (STD_ReturnType)0x01;
  1304   001016  0E01               	movlw	1
  1305   001018  6E48               	movwf	gpio_pin_direction_init@ret^0,c
  1306   00101A                     
  1307                           ;MCAL_Layer/hal_gpio.c: 26:     if(_pin_config_t == ((void*)0) || (_pin_config_t->port >
      +                           (5 - 1)) || (_pin_config_t->pin > (8 - 1))) ret = (STD_ReturnType)0x00;
  1308   00101A  5040               	movf	gpio_pin_direction_init@_pin_config_t^0,w,c
  1309   00101C  1041               	iorwf	(gpio_pin_direction_init@_pin_config_t+1)^0,w,c
  1310   00101E  B4D8               	btfsc	status,2,c
  1311   001020  EF14  F008         	goto	u1661
  1312   001024  EF16  F008         	goto	u1660
  1313   001028                     u1661:
  1314   001028  EF36  F008         	goto	l2941
  1315   00102C                     u1660:
  1316   00102C  C040  FFD9         	movff	gpio_pin_direction_init@_pin_config_t,fsr2l
  1317   001030  C041  FFDA         	movff	gpio_pin_direction_init@_pin_config_t+1,fsr2h
  1318   001034  50DF               	movf	223,w,c
  1319   001036  0B07               	andlw	7
  1320   001038  6E42               	movwf	??_gpio_pin_direction_init^0,c
  1321   00103A  0E05               	movlw	5
  1322   00103C  6042               	cpfslt	??_gpio_pin_direction_init^0,c
  1323   00103E  EF23  F008         	goto	u1671
  1324   001042  EF25  F008         	goto	u1670
  1325   001046                     u1671:
  1326   001046  EF36  F008         	goto	l2941
  1327   00104A                     u1670:
  1328   00104A  C040  FFD9         	movff	gpio_pin_direction_init@_pin_config_t,fsr2l
  1329   00104E  C041  FFDA         	movff	gpio_pin_direction_init@_pin_config_t+1,fsr2h
  1330   001052  30DF               	rrcf	223,w,c
  1331   001054  32E8               	rrcf	wreg,f,c
  1332   001056  32E8               	rrcf	wreg,f,c
  1333   001058  0B07               	andlw	7
  1334   00105A  6E42               	movwf	??_gpio_pin_direction_init^0,c
  1335   00105C  0E07               	movlw	7
  1336   00105E  6442               	cpfsgt	??_gpio_pin_direction_init^0,c
  1337   001060  EF34  F008         	goto	u1681
  1338   001064  EF36  F008         	goto	u1680
  1339   001068                     u1681:
  1340   001068  EF99  F008         	goto	l2949
  1341   00106C                     u1680:
  1342   00106C                     l2941:
  1343   00106C  0E00               	movlw	0
  1344   00106E  6E48               	movwf	gpio_pin_direction_init@ret^0,c
  1345   001070  EFBA  F008         	goto	l2951
  1346   001074                     l2943:
  1347                           
  1348                           ;MCAL_Layer/hal_gpio.c: 30:                 (*tris_register[_pin_config_t->port] &= ~(1 
      +                          << _pin_config_t->pin));
  1349   001074  C040  FFD9         	movff	gpio_pin_direction_init@_pin_config_t,fsr2l
  1350   001078  C041  FFDA         	movff	gpio_pin_direction_init@_pin_config_t+1,fsr2h
  1351   00107C  30DF               	rrcf	223,w,c
  1352   00107E  32E8               	rrcf	wreg,f,c
  1353   001080  32E8               	rrcf	wreg,f,c
  1354   001082  0B07               	andlw	7
  1355   001084  6E42               	movwf	??_gpio_pin_direction_init^0,c
  1356   001086  0E01               	movlw	1
  1357   001088  6E43               	movwf	(??_gpio_pin_direction_init+1)^0,c
  1358   00108A  2A42               	incf	??_gpio_pin_direction_init^0,f,c
  1359   00108C  EF4A  F008         	goto	u1694
  1360   001090                     u1695:
  1361   001090  90D8               	bcf	status,0,c
  1362   001092  3643               	rlcf	(??_gpio_pin_direction_init+1)^0,f,c
  1363   001094                     u1694:
  1364   001094  2E42               	decfsz	??_gpio_pin_direction_init^0,f,c
  1365   001096  EF48  F008         	goto	u1695
  1366   00109A  5043               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  1367   00109C  0AFF               	xorlw	255
  1368   00109E  6E44               	movwf	(??_gpio_pin_direction_init+2)^0,c
  1369   0010A0  C040  FFD9         	movff	gpio_pin_direction_init@_pin_config_t,fsr2l
  1370   0010A4  C041  FFDA         	movff	gpio_pin_direction_init@_pin_config_t+1,fsr2h
  1371   0010A8  50DF               	movf	223,w,c
  1372   0010AA  0B07               	andlw	7
  1373   0010AC  6E45               	movwf	(??_gpio_pin_direction_init+3)^0,c
  1374   0010AE  5045               	movf	(??_gpio_pin_direction_init+3)^0,w,c
  1375   0010B0  0D02               	mullw	2
  1376   0010B2  0E15               	movlw	low _tris_register
  1377   0010B4  24F3               	addwf	243,w,c
  1378   0010B6  6ED9               	movwf	fsr2l,c
  1379   0010B8  0E00               	movlw	high _tris_register
  1380   0010BA  20F4               	addwfc	prodh,w,c
  1381   0010BC  6EDA               	movwf	fsr2h,c
  1382   0010BE  CFDE F046          	movff	postinc2,??_gpio_pin_direction_init+4
  1383   0010C2  CFDD F047          	movff	postdec2,??_gpio_pin_direction_init+5
  1384   0010C6  C046  FFD9         	movff	??_gpio_pin_direction_init+4,fsr2l
  1385   0010CA  C047  FFDA         	movff	??_gpio_pin_direction_init+5,fsr2h
  1386   0010CE  5044               	movf	(??_gpio_pin_direction_init+2)^0,w,c
  1387   0010D0  16DF               	andwf	indf2,f,c
  1388                           
  1389                           ;MCAL_Layer/hal_gpio.c: 31:                 break;
  1390   0010D2  EFBA  F008         	goto	l2951
  1391   0010D6                     l2945:
  1392                           
  1393                           ;MCAL_Layer/hal_gpio.c: 33:                 (*tris_register[_pin_config_t->port] |= (1 <
      +                          < _pin_config_t->pin));
  1394   0010D6  C040  FFD9         	movff	gpio_pin_direction_init@_pin_config_t,fsr2l
  1395   0010DA  C041  FFDA         	movff	gpio_pin_direction_init@_pin_config_t+1,fsr2h
  1396   0010DE  30DF               	rrcf	223,w,c
  1397   0010E0  32E8               	rrcf	wreg,f,c
  1398   0010E2  32E8               	rrcf	wreg,f,c
  1399   0010E4  0B07               	andlw	7
  1400   0010E6  6E42               	movwf	??_gpio_pin_direction_init^0,c
  1401   0010E8  0E01               	movlw	1
  1402   0010EA  6E43               	movwf	(??_gpio_pin_direction_init+1)^0,c
  1403   0010EC  2A42               	incf	??_gpio_pin_direction_init^0,f,c
  1404   0010EE  EF7B  F008         	goto	u1704
  1405   0010F2                     u1705:
  1406   0010F2  90D8               	bcf	status,0,c
  1407   0010F4  3643               	rlcf	(??_gpio_pin_direction_init+1)^0,f,c
  1408   0010F6                     u1704:
  1409   0010F6  2E42               	decfsz	??_gpio_pin_direction_init^0,f,c
  1410   0010F8  EF79  F008         	goto	u1705
  1411   0010FC  C040  FFD9         	movff	gpio_pin_direction_init@_pin_config_t,fsr2l
  1412   001100  C041  FFDA         	movff	gpio_pin_direction_init@_pin_config_t+1,fsr2h
  1413   001104  50DF               	movf	223,w,c
  1414   001106  0B07               	andlw	7
  1415   001108  6E44               	movwf	(??_gpio_pin_direction_init+2)^0,c
  1416   00110A  5044               	movf	(??_gpio_pin_direction_init+2)^0,w,c
  1417   00110C  0D02               	mullw	2
  1418   00110E  0E15               	movlw	low _tris_register
  1419   001110  24F3               	addwf	243,w,c
  1420   001112  6ED9               	movwf	fsr2l,c
  1421   001114  0E00               	movlw	high _tris_register
  1422   001116  20F4               	addwfc	prodh,w,c
  1423   001118  6EDA               	movwf	fsr2h,c
  1424   00111A  CFDE F045          	movff	postinc2,??_gpio_pin_direction_init+3
  1425   00111E  CFDD F046          	movff	postdec2,??_gpio_pin_direction_init+4
  1426   001122  C045  FFD9         	movff	??_gpio_pin_direction_init+3,fsr2l
  1427   001126  C046  FFDA         	movff	??_gpio_pin_direction_init+4,fsr2h
  1428   00112A  5043               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  1429   00112C  12DF               	iorwf	indf2,f,c
  1430                           
  1431                           ;MCAL_Layer/hal_gpio.c: 34:                 break;
  1432   00112E  EFBA  F008         	goto	l2951
  1433   001132                     l2949:
  1434   001132  C040  FFD9         	movff	gpio_pin_direction_init@_pin_config_t,fsr2l
  1435   001136  C041  FFDA         	movff	gpio_pin_direction_init@_pin_config_t+1,fsr2h
  1436   00113A  BCDF               	btfsc	indf2,6,c
  1437   00113C  EFA2  F008         	goto	u1711
  1438   001140  EFA5  F008         	goto	u1710
  1439   001144                     u1711:
  1440   001144  0E01               	movlw	1
  1441   001146  EFA6  F008         	goto	u1720
  1442   00114A                     u1710:
  1443   00114A  0E00               	movlw	0
  1444   00114C                     u1720:
  1445   00114C  6E42               	movwf	??_gpio_pin_direction_init^0,c
  1446   00114E  6A43               	clrf	(??_gpio_pin_direction_init+1)^0,c
  1447                           
  1448                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1449                           ; Switch size 1, requested type "simple"
  1450                           ; Number of cases is 1, Range of values is 0 to 0
  1451                           ; switch strategies available:
  1452                           ; Name         Instructions Cycles
  1453                           ; simple_byte            4     3 (average)
  1454                           ;	Chosen strategy is simple_byte
  1455   001150  5043               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  1456   001152  0A00               	xorlw	0	; case 0
  1457   001154  B4D8               	btfsc	status,2,c
  1458   001156  EFAF  F008         	goto	l3777
  1459   00115A  EF36  F008         	goto	l2941
  1460   00115E                     l3777:
  1461                           
  1462                           ; Switch size 1, requested type "simple"
  1463                           ; Number of cases is 2, Range of values is 0 to 1
  1464                           ; switch strategies available:
  1465                           ; Name         Instructions Cycles
  1466                           ; simple_byte            7     4 (average)
  1467                           ;	Chosen strategy is simple_byte
  1468   00115E  5042               	movf	??_gpio_pin_direction_init^0,w,c
  1469   001160  0A00               	xorlw	0	; case 0
  1470   001162  B4D8               	btfsc	status,2,c
  1471   001164  EF3A  F008         	goto	l2943
  1472   001168  0A01               	xorlw	1	; case 1
  1473   00116A  B4D8               	btfsc	status,2,c
  1474   00116C  EF6B  F008         	goto	l2945
  1475   001170  EF36  F008         	goto	l2941
  1476   001174                     l2951:
  1477                           
  1478                           ;MCAL_Layer/hal_gpio.c: 38:     return ret;
  1479   001174  5048               	movf	gpio_pin_direction_init@ret^0,w,c
  1480   001176  0012               	return		;funcret
  1481   001178                     __end_of_gpio_pin_direction_init:
  1482                           	callstack 0
  1483                           
  1484 ;; *************** function _InterruptManager *****************
  1485 ;; Defined at:
  1486 ;;		line 26 in file "MCAL_Layer/Interrupt/hal_manager_interrupt.c"
  1487 ;; Parameters:    Size  Location     Type
  1488 ;;		None
  1489 ;; Auto vars:     Size  Location     Type
  1490 ;;		None
  1491 ;; Return value:  Size  Location     Type
  1492 ;;                  1    wreg      void 
  1493 ;; Registers used:
  1494 ;;		cstack
  1495 ;; Tracked objects:
  1496 ;;		On entry : 0/0
  1497 ;;		On exit  : 0/0
  1498 ;;		Unchanged: 0/0
  1499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1504 ;;Total ram usage:        0 bytes
  1505 ;; Hardware stack levels used: 1
  1506 ;; Hardware stack levels required when called: 1
  1507 ;; This function calls:
  1508 ;;		_INT0_ISR
  1509 ;;		_INT1_ISR
  1510 ;;		_INT2_ISR
  1511 ;;		_RB4_ISR
  1512 ;;		_RB5_ISR
  1513 ;;		_RB6_ISR
  1514 ;;		_RB7_ISR
  1515 ;; This function is called by:
  1516 ;;		Interrupt level 2
  1517 ;; This function uses a non-reentrant model
  1518 ;;
  1519                           
  1520                           	psect	intcode
  1521   000008                     __pintcode:
  1522                           	callstack 0
  1523   000008                     _InterruptManager:
  1524                           	callstack 26
  1525                           
  1526                           ;incstack = 0
  1527   000008  8251               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1528   00000A  ED61  F009         	call	int_func,f	;refresh shadow registers
  1529                           
  1530                           	psect	intcode_body
  1531   0012C2                     __pintcode_body:
  1532                           	callstack 26
  1533   0012C2                     int_func:
  1534                           	callstack 26
  1535   0012C2  0006               	pop		; remove dummy address from shadow register refresh
  1536   0012C4                     
  1537                           ;MCAL_Layer/Interrupt/hal_manager_interrupt.c: 27:     if((INTCONbits.INT0IE == 1) && (I
      +                          NTCONbits.INT0IF == 1)) INT0_ISR();
  1538   0012C4  A8F2               	btfss	242,4,c	;volatile
  1539   0012C6  EF67  F009         	goto	i2u147_41
  1540   0012CA  EF69  F009         	goto	i2u147_40
  1541   0012CE                     i2u147_41:
  1542   0012CE  EF72  F009         	goto	i2l2865
  1543   0012D2                     i2u147_40:
  1544   0012D2  A2F2               	btfss	242,1,c	;volatile
  1545   0012D4  EF6E  F009         	goto	i2u148_41
  1546   0012D8  EF70  F009         	goto	i2u148_40
  1547   0012DC                     i2u148_41:
  1548   0012DC  EF72  F009         	goto	i2l2865
  1549   0012E0                     i2u148_40:
  1550   0012E0  EC6C  F00B         	call	_INT0_ISR	;wreg free
  1551   0012E4                     i2l2865:
  1552                           
  1553                           ;MCAL_Layer/Interrupt/hal_manager_interrupt.c: 28:     if((INTCON3bits.INT1IE == 1) && (
      +                          INTCON3bits.INT1IF == 1)) INT1_ISR();
  1554   0012E4  A6F0               	btfss	240,3,c	;volatile
  1555   0012E6  EF77  F009         	goto	i2u149_41
  1556   0012EA  EF79  F009         	goto	i2u149_40
  1557   0012EE                     i2u149_41:
  1558   0012EE  EF82  F009         	goto	i2l2871
  1559   0012F2                     i2u149_40:
  1560   0012F2  A0F0               	btfss	240,0,c	;volatile
  1561   0012F4  EF7E  F009         	goto	i2u150_41
  1562   0012F8  EF80  F009         	goto	i2u150_40
  1563   0012FC                     i2u150_41:
  1564   0012FC  EF82  F009         	goto	i2l2871
  1565   001300                     i2u150_40:
  1566   001300  EC6A  F00B         	call	_INT1_ISR	;wreg free
  1567   001304                     i2l2871:
  1568                           
  1569                           ;MCAL_Layer/Interrupt/hal_manager_interrupt.c: 29:     if((INTCON3bits.INT2IE == 1) && (
      +                          INTCON3bits.INT2IF == 1)) INT2_ISR();
  1570   001304  A8F0               	btfss	240,4,c	;volatile
  1571   001306  EF87  F009         	goto	i2u151_41
  1572   00130A  EF89  F009         	goto	i2u151_40
  1573   00130E                     i2u151_41:
  1574   00130E  EF92  F009         	goto	i2l2877
  1575   001312                     i2u151_40:
  1576   001312  A2F0               	btfss	240,1,c	;volatile
  1577   001314  EF8E  F009         	goto	i2u152_41
  1578   001318  EF90  F009         	goto	i2u152_40
  1579   00131C                     i2u152_41:
  1580   00131C  EF92  F009         	goto	i2l2877
  1581   001320                     i2u152_40:
  1582   001320  EC68  F00B         	call	_INT2_ISR	;wreg free
  1583   001324                     i2l2877:
  1584                           
  1585                           ;MCAL_Layer/Interrupt/hal_manager_interrupt.c: 30:     if((INTCONbits.RBIE == 1) && (INT
      +                          CONbits.RBIF == 1) && (PORTBbits.RB4 == 1)) RB4_ISR();
  1586   001324  A6F2               	btfss	242,3,c	;volatile
  1587   001326  EF97  F009         	goto	i2u153_41
  1588   00132A  EF99  F009         	goto	i2u153_40
  1589   00132E                     i2u153_41:
  1590   00132E  EFA9  F009         	goto	i2l2885
  1591   001332                     i2u153_40:
  1592   001332  A0F2               	btfss	242,0,c	;volatile
  1593   001334  EF9E  F009         	goto	i2u154_41
  1594   001338  EFA0  F009         	goto	i2u154_40
  1595   00133C                     i2u154_41:
  1596   00133C  EFA9  F009         	goto	i2l2885
  1597   001340                     i2u154_40:
  1598   001340  A881               	btfss	129,4,c	;volatile
  1599   001342  EFA5  F009         	goto	i2u155_41
  1600   001346  EFA7  F009         	goto	i2u155_40
  1601   00134A                     i2u155_41:
  1602   00134A  EFA9  F009         	goto	i2l2885
  1603   00134E                     i2u155_40:
  1604   00134E  EC66  F00B         	call	_RB4_ISR	;wreg free
  1605   001352                     i2l2885:
  1606                           
  1607                           ;MCAL_Layer/Interrupt/hal_manager_interrupt.c: 31:     if((INTCONbits.RBIE == 1) && (INT
      +                          CONbits.RBIF == 1) && (PORTBbits.RB5 == 1)) RB5_ISR();
  1608   001352  A6F2               	btfss	242,3,c	;volatile
  1609   001354  EFAE  F009         	goto	i2u156_41
  1610   001358  EFB0  F009         	goto	i2u156_40
  1611   00135C                     i2u156_41:
  1612   00135C  EFC0  F009         	goto	i2l2893
  1613   001360                     i2u156_40:
  1614   001360  A0F2               	btfss	242,0,c	;volatile
  1615   001362  EFB5  F009         	goto	i2u157_41
  1616   001366  EFB7  F009         	goto	i2u157_40
  1617   00136A                     i2u157_41:
  1618   00136A  EFC0  F009         	goto	i2l2893
  1619   00136E                     i2u157_40:
  1620   00136E  AA81               	btfss	129,5,c	;volatile
  1621   001370  EFBC  F009         	goto	i2u158_41
  1622   001374  EFBE  F009         	goto	i2u158_40
  1623   001378                     i2u158_41:
  1624   001378  EFC0  F009         	goto	i2l2893
  1625   00137C                     i2u158_40:
  1626   00137C  EC64  F00B         	call	_RB5_ISR	;wreg free
  1627   001380                     i2l2893:
  1628                           
  1629                           ;MCAL_Layer/Interrupt/hal_manager_interrupt.c: 32:     if((INTCONbits.RBIE == 1) && (INT
      +                          CONbits.RBIF == 1) && (PORTBbits.RB6 == 1)) RB6_ISR();
  1630   001380  A6F2               	btfss	242,3,c	;volatile
  1631   001382  EFC5  F009         	goto	i2u159_41
  1632   001386  EFC7  F009         	goto	i2u159_40
  1633   00138A                     i2u159_41:
  1634   00138A  EFD7  F009         	goto	i2l2901
  1635   00138E                     i2u159_40:
  1636   00138E  A0F2               	btfss	242,0,c	;volatile
  1637   001390  EFCC  F009         	goto	i2u160_41
  1638   001394  EFCE  F009         	goto	i2u160_40
  1639   001398                     i2u160_41:
  1640   001398  EFD7  F009         	goto	i2l2901
  1641   00139C                     i2u160_40:
  1642   00139C  AC81               	btfss	129,6,c	;volatile
  1643   00139E  EFD3  F009         	goto	i2u161_41
  1644   0013A2  EFD5  F009         	goto	i2u161_40
  1645   0013A6                     i2u161_41:
  1646   0013A6  EFD7  F009         	goto	i2l2901
  1647   0013AA                     i2u161_40:
  1648   0013AA  EC62  F00B         	call	_RB6_ISR	;wreg free
  1649   0013AE                     i2l2901:
  1650                           
  1651                           ;MCAL_Layer/Interrupt/hal_manager_interrupt.c: 33:     if((INTCONbits.RBIE == 1) && (INT
      +                          CONbits.RBIF == 1) && (PORTBbits.RB7 == 1)) RB7_ISR();
  1652   0013AE  A6F2               	btfss	242,3,c	;volatile
  1653   0013B0  EFDC  F009         	goto	i2u162_41
  1654   0013B4  EFDE  F009         	goto	i2u162_40
  1655   0013B8                     i2u162_41:
  1656   0013B8  EFEE  F009         	goto	i2l765
  1657   0013BC                     i2u162_40:
  1658   0013BC  A0F2               	btfss	242,0,c	;volatile
  1659   0013BE  EFE3  F009         	goto	i2u163_41
  1660   0013C2  EFE5  F009         	goto	i2u163_40
  1661   0013C6                     i2u163_41:
  1662   0013C6  EFEE  F009         	goto	i2l765
  1663   0013CA                     i2u163_40:
  1664   0013CA  AE81               	btfss	129,7,c	;volatile
  1665   0013CC  EFEA  F009         	goto	i2u164_41
  1666   0013D0  EFEC  F009         	goto	i2u164_40
  1667   0013D4                     i2u164_41:
  1668   0013D4  EFEE  F009         	goto	i2l765
  1669   0013D8                     i2u164_40:
  1670   0013D8  EC60  F00B         	call	_RB7_ISR	;wreg free
  1671   0013DC                     i2l765:
  1672   0013DC  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1673   0013DE  0011               	retfie		f
  1674   0013E0                     __end_of_InterruptManager:
  1675                           	callstack 0
  1676                           
  1677 ;; *************** function _RB7_ISR *****************
  1678 ;; Defined at:
  1679 ;;		line 141 in file "MCAL_Layer/Interrupt/hal_extrenal_interrupt.c"
  1680 ;; Parameters:    Size  Location     Type
  1681 ;;		None
  1682 ;; Auto vars:     Size  Location     Type
  1683 ;;		None
  1684 ;; Return value:  Size  Location     Type
  1685 ;;                  1    wreg      void 
  1686 ;; Registers used:
  1687 ;;		None
  1688 ;; Tracked objects:
  1689 ;;		On entry : 0/0
  1690 ;;		On exit  : 0/0
  1691 ;;		Unchanged: 0/0
  1692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1697 ;;Total ram usage:        0 bytes
  1698 ;; Hardware stack levels used: 1
  1699 ;; This function calls:
  1700 ;;		Nothing
  1701 ;; This function is called by:
  1702 ;;		_InterruptManager
  1703 ;; This function uses a non-reentrant model
  1704 ;;
  1705                           
  1706                           	psect	text9
  1707   0016C0                     __ptext9:
  1708                           	callstack 0
  1709   0016C0                     _RB7_ISR:
  1710                           	callstack 26
  1711   0016C0                     
  1712                           ;MCAL_Layer/Interrupt/hal_extrenal_interrupt.c: 143:     (INTCONbits.RBIF = 0);
  1713   0016C0  90F2               	bcf	242,0,c	;volatile
  1714   0016C2  0012               	return		;funcret
  1715   0016C4                     __end_of_RB7_ISR:
  1716                           	callstack 0
  1717                           
  1718 ;; *************** function _RB6_ISR *****************
  1719 ;; Defined at:
  1720 ;;		line 130 in file "MCAL_Layer/Interrupt/hal_extrenal_interrupt.c"
  1721 ;; Parameters:    Size  Location     Type
  1722 ;;		None
  1723 ;; Auto vars:     Size  Location     Type
  1724 ;;		None
  1725 ;; Return value:  Size  Location     Type
  1726 ;;                  1    wreg      void 
  1727 ;; Registers used:
  1728 ;;		None
  1729 ;; Tracked objects:
  1730 ;;		On entry : 0/0
  1731 ;;		On exit  : 0/0
  1732 ;;		Unchanged: 0/0
  1733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1738 ;;Total ram usage:        0 bytes
  1739 ;; Hardware stack levels used: 1
  1740 ;; This function calls:
  1741 ;;		Nothing
  1742 ;; This function is called by:
  1743 ;;		_InterruptManager
  1744 ;; This function uses a non-reentrant model
  1745 ;;
  1746                           
  1747                           	psect	text10
  1748   0016C4                     __ptext10:
  1749                           	callstack 0
  1750   0016C4                     _RB6_ISR:
  1751                           	callstack 26
  1752   0016C4                     
  1753                           ;MCAL_Layer/Interrupt/hal_extrenal_interrupt.c: 132:     (INTCONbits.RBIF = 0);
  1754   0016C4  90F2               	bcf	242,0,c	;volatile
  1755   0016C6  0012               	return		;funcret
  1756   0016C8                     __end_of_RB6_ISR:
  1757                           	callstack 0
  1758                           
  1759 ;; *************** function _RB5_ISR *****************
  1760 ;; Defined at:
  1761 ;;		line 119 in file "MCAL_Layer/Interrupt/hal_extrenal_interrupt.c"
  1762 ;; Parameters:    Size  Location     Type
  1763 ;;		None
  1764 ;; Auto vars:     Size  Location     Type
  1765 ;;		None
  1766 ;; Return value:  Size  Location     Type
  1767 ;;                  1    wreg      void 
  1768 ;; Registers used:
  1769 ;;		None
  1770 ;; Tracked objects:
  1771 ;;		On entry : 0/0
  1772 ;;		On exit  : 0/0
  1773 ;;		Unchanged: 0/0
  1774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1779 ;;Total ram usage:        0 bytes
  1780 ;; Hardware stack levels used: 1
  1781 ;; This function calls:
  1782 ;;		Nothing
  1783 ;; This function is called by:
  1784 ;;		_InterruptManager
  1785 ;; This function uses a non-reentrant model
  1786 ;;
  1787                           
  1788                           	psect	text11
  1789   0016C8                     __ptext11:
  1790                           	callstack 0
  1791   0016C8                     _RB5_ISR:
  1792                           	callstack 26
  1793   0016C8                     
  1794                           ;MCAL_Layer/Interrupt/hal_extrenal_interrupt.c: 121:     (INTCONbits.RBIF = 0);
  1795   0016C8  90F2               	bcf	242,0,c	;volatile
  1796   0016CA  0012               	return		;funcret
  1797   0016CC                     __end_of_RB5_ISR:
  1798                           	callstack 0
  1799                           
  1800 ;; *************** function _RB4_ISR *****************
  1801 ;; Defined at:
  1802 ;;		line 109 in file "MCAL_Layer/Interrupt/hal_extrenal_interrupt.c"
  1803 ;; Parameters:    Size  Location     Type
  1804 ;;		None
  1805 ;; Auto vars:     Size  Location     Type
  1806 ;;		None
  1807 ;; Return value:  Size  Location     Type
  1808 ;;                  1    wreg      void 
  1809 ;; Registers used:
  1810 ;;		None
  1811 ;; Tracked objects:
  1812 ;;		On entry : 0/0
  1813 ;;		On exit  : 0/0
  1814 ;;		Unchanged: 0/0
  1815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1820 ;;Total ram usage:        0 bytes
  1821 ;; Hardware stack levels used: 1
  1822 ;; This function calls:
  1823 ;;		Nothing
  1824 ;; This function is called by:
  1825 ;;		_InterruptManager
  1826 ;; This function uses a non-reentrant model
  1827 ;;
  1828                           
  1829                           	psect	text12
  1830   0016CC                     __ptext12:
  1831                           	callstack 0
  1832   0016CC                     _RB4_ISR:
  1833                           	callstack 26
  1834   0016CC                     
  1835                           ;MCAL_Layer/Interrupt/hal_extrenal_interrupt.c: 111:     (INTCONbits.RBIF = 0);
  1836   0016CC  90F2               	bcf	242,0,c	;volatile
  1837   0016CE  0012               	return		;funcret
  1838   0016D0                     __end_of_RB4_ISR:
  1839                           	callstack 0
  1840                           
  1841 ;; *************** function _INT2_ISR *****************
  1842 ;; Defined at:
  1843 ;;		line 99 in file "MCAL_Layer/Interrupt/hal_extrenal_interrupt.c"
  1844 ;; Parameters:    Size  Location     Type
  1845 ;;		None
  1846 ;; Auto vars:     Size  Location     Type
  1847 ;;		None
  1848 ;; Return value:  Size  Location     Type
  1849 ;;                  1    wreg      void 
  1850 ;; Registers used:
  1851 ;;		None
  1852 ;; Tracked objects:
  1853 ;;		On entry : 0/0
  1854 ;;		On exit  : 0/0
  1855 ;;		Unchanged: 0/0
  1856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1861 ;;Total ram usage:        0 bytes
  1862 ;; Hardware stack levels used: 1
  1863 ;; This function calls:
  1864 ;;		Nothing
  1865 ;; This function is called by:
  1866 ;;		_InterruptManager
  1867 ;; This function uses a non-reentrant model
  1868 ;;
  1869                           
  1870                           	psect	text13
  1871   0016D0                     __ptext13:
  1872                           	callstack 0
  1873   0016D0                     _INT2_ISR:
  1874                           	callstack 26
  1875   0016D0                     
  1876                           ;MCAL_Layer/Interrupt/hal_extrenal_interrupt.c: 101:     (INTCON3bits.INT2F = 0);
  1877   0016D0  92F0               	bcf	240,1,c	;volatile
  1878   0016D2  0012               	return		;funcret
  1879   0016D4                     __end_of_INT2_ISR:
  1880                           	callstack 0
  1881                           
  1882 ;; *************** function _INT1_ISR *****************
  1883 ;; Defined at:
  1884 ;;		line 88 in file "MCAL_Layer/Interrupt/hal_extrenal_interrupt.c"
  1885 ;; Parameters:    Size  Location     Type
  1886 ;;		None
  1887 ;; Auto vars:     Size  Location     Type
  1888 ;;		None
  1889 ;; Return value:  Size  Location     Type
  1890 ;;                  1    wreg      void 
  1891 ;; Registers used:
  1892 ;;		None
  1893 ;; Tracked objects:
  1894 ;;		On entry : 0/0
  1895 ;;		On exit  : 0/0
  1896 ;;		Unchanged: 0/0
  1897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1902 ;;Total ram usage:        0 bytes
  1903 ;; Hardware stack levels used: 1
  1904 ;; This function calls:
  1905 ;;		Nothing
  1906 ;; This function is called by:
  1907 ;;		_InterruptManager
  1908 ;; This function uses a non-reentrant model
  1909 ;;
  1910                           
  1911                           	psect	text14
  1912   0016D4                     __ptext14:
  1913                           	callstack 0
  1914   0016D4                     _INT1_ISR:
  1915                           	callstack 26
  1916   0016D4                     
  1917                           ;MCAL_Layer/Interrupt/hal_extrenal_interrupt.c: 90:     (INTCON3bits.INT1F = 0);
  1918   0016D4  90F0               	bcf	240,0,c	;volatile
  1919   0016D6  0012               	return		;funcret
  1920   0016D8                     __end_of_INT1_ISR:
  1921                           	callstack 0
  1922                           
  1923 ;; *************** function _INT0_ISR *****************
  1924 ;; Defined at:
  1925 ;;		line 77 in file "MCAL_Layer/Interrupt/hal_extrenal_interrupt.c"
  1926 ;; Parameters:    Size  Location     Type
  1927 ;;		None
  1928 ;; Auto vars:     Size  Location     Type
  1929 ;;		None
  1930 ;; Return value:  Size  Location     Type
  1931 ;;                  1    wreg      void 
  1932 ;; Registers used:
  1933 ;;		None
  1934 ;; Tracked objects:
  1935 ;;		On entry : 0/0
  1936 ;;		On exit  : 0/0
  1937 ;;		Unchanged: 0/0
  1938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1943 ;;Total ram usage:        0 bytes
  1944 ;; Hardware stack levels used: 1
  1945 ;; This function calls:
  1946 ;;		Nothing
  1947 ;; This function is called by:
  1948 ;;		_InterruptManager
  1949 ;; This function uses a non-reentrant model
  1950 ;;
  1951                           
  1952                           	psect	text15
  1953   0016D8                     __ptext15:
  1954                           	callstack 0
  1955   0016D8                     _INT0_ISR:
  1956                           	callstack 26
  1957   0016D8                     
  1958                           ;MCAL_Layer/Interrupt/hal_extrenal_interrupt.c: 79:     (INTCONbits.INT0IF = 0);
  1959   0016D8  92F2               	bcf	242,1,c	;volatile
  1960   0016DA  0012               	return		;funcret
  1961   0016DC                     __end_of_INT0_ISR:
  1962                           	callstack 0
  1963                           
  1964                           	psect	rparam
  1965   000000                     
  1966                           	psect	temp
  1967   000051                     btemp:
  1968                           	callstack 0
  1969   000051                     	ds	1
  1970   000000                     int$flags	set	btemp
  1971   000000                     wtemp8	set	btemp+1
  1972   000000                     ttemp5	set	btemp+1
  1973   000000                     ttemp6	set	btemp+4
  1974   000000                     ttemp7	set	btemp+8
  1975                           
  1976                           	psect	idloc
  1977                           
  1978                           ;Config register IDLOC0 @ 0x200000
  1979                           ;	unspecified, using default values
  1980   200000                     	org	2097152
  1981   200000  FF                 	db	255
  1982                           
  1983                           ;Config register IDLOC1 @ 0x200001
  1984                           ;	unspecified, using default values
  1985   200001                     	org	2097153
  1986   200001  FF                 	db	255
  1987                           
  1988                           ;Config register IDLOC2 @ 0x200002
  1989                           ;	unspecified, using default values
  1990   200002                     	org	2097154
  1991   200002  FF                 	db	255
  1992                           
  1993                           ;Config register IDLOC3 @ 0x200003
  1994                           ;	unspecified, using default values
  1995   200003                     	org	2097155
  1996   200003  FF                 	db	255
  1997                           
  1998                           ;Config register IDLOC4 @ 0x200004
  1999                           ;	unspecified, using default values
  2000   200004                     	org	2097156
  2001   200004  FF                 	db	255
  2002                           
  2003                           ;Config register IDLOC5 @ 0x200005
  2004                           ;	unspecified, using default values
  2005   200005                     	org	2097157
  2006   200005  FF                 	db	255
  2007                           
  2008                           ;Config register IDLOC6 @ 0x200006
  2009                           ;	unspecified, using default values
  2010   200006                     	org	2097158
  2011   200006  FF                 	db	255
  2012                           
  2013                           ;Config register IDLOC7 @ 0x200007
  2014                           ;	unspecified, using default values
  2015   200007                     	org	2097159
  2016   200007  FF                 	db	255
  2017                           
  2018                           	psect	config
  2019                           
  2020                           ; Padding undefined space
  2021   300000                     	org	3145728
  2022   300000  FF                 	db	255
  2023                           
  2024                           ;Config register CONFIG1H @ 0x300001
  2025                           ;	Oscillator Selection bits
  2026                           ;	OSC = RCIO6, External RC oscillator, port function on RA6
  2027                           ;	Fail-Safe Clock Monitor Enable bit
  2028                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2029                           ;	Internal/External Oscillator Switchover bit
  2030                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2031   300001                     	org	3145729
  2032   300001  07                 	db	7
  2033                           
  2034                           ;Config register CONFIG2L @ 0x300002
  2035                           ;	Power-up Timer Enable bit
  2036                           ;	PWRT = OFF, PWRT disabled
  2037                           ;	Brown-out Reset Enable bits
  2038                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2039                           ;	Brown Out Reset Voltage bits
  2040                           ;	BORV = 3, Minimum setting
  2041   300002                     	org	3145730
  2042   300002  1F                 	db	31
  2043                           
  2044                           ;Config register CONFIG2H @ 0x300003
  2045                           ;	Watchdog Timer Enable bit
  2046                           ;	WDT = ON, WDT enabled
  2047                           ;	Watchdog Timer Postscale Select bits
  2048                           ;	WDTPS = 32768, 1:32768
  2049   300003                     	org	3145731
  2050   300003  1F                 	db	31
  2051                           
  2052                           ; Padding undefined space
  2053   300004                     	org	3145732
  2054   300004  FF                 	db	255
  2055                           
  2056                           ;Config register CONFIG3H @ 0x300005
  2057                           ;	CCP2 MUX bit
  2058                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2059                           ;	PORTB A/D Enable bit
  2060                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2061                           ;	Low-Power Timer1 Oscillator Enable bit
  2062                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2063                           ;	MCLR Pin Enable bit
  2064                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2065   300005                     	org	3145733
  2066   300005  81                 	db	129
  2067                           
  2068                           ;Config register CONFIG4L @ 0x300006
  2069                           ;	Stack Full/Underflow Reset Enable bit
  2070                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2071                           ;	Single-Supply ICSP Enable bit
  2072                           ;	LVP = ON, Single-Supply ICSP enabled
  2073                           ;	Extended Instruction Set Enable bit
  2074                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2075                           ;	Background Debugger Enable bit
  2076                           ;	DEBUG = 0x1, unprogrammed default
  2077   300006                     	org	3145734
  2078   300006  85                 	db	133
  2079                           
  2080                           ; Padding undefined space
  2081   300007                     	org	3145735
  2082   300007  FF                 	db	255
  2083                           
  2084                           ;Config register CONFIG5L @ 0x300008
  2085                           ;	Code Protection bit
  2086                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2087                           ;	Code Protection bit
  2088                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2089                           ;	Code Protection bit
  2090                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2091                           ;	Code Protection bit
  2092                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2093   300008                     	org	3145736
  2094   300008  0F                 	db	15
  2095                           
  2096                           ;Config register CONFIG5H @ 0x300009
  2097                           ;	Boot Block Code Protection bit
  2098                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2099                           ;	Data EEPROM Code Protection bit
  2100                           ;	CPD = OFF, Data EEPROM not code-protected
  2101   300009                     	org	3145737
  2102   300009  C0                 	db	192
  2103                           
  2104                           ;Config register CONFIG6L @ 0x30000A
  2105                           ;	Write Protection bit
  2106                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2107                           ;	Write Protection bit
  2108                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2109                           ;	Write Protection bit
  2110                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2111                           ;	Write Protection bit
  2112                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2113   30000A                     	org	3145738
  2114   30000A  0F                 	db	15
  2115                           
  2116                           ;Config register CONFIG6H @ 0x30000B
  2117                           ;	Configuration Register Write Protection bit
  2118                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2119                           ;	Boot Block Write Protection bit
  2120                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2121                           ;	Data EEPROM Write Protection bit
  2122                           ;	WRTD = OFF, Data EEPROM not write-protected
  2123   30000B                     	org	3145739
  2124   30000B  E0                 	db	224
  2125                           
  2126                           ;Config register CONFIG7L @ 0x30000C
  2127                           ;	Table Read Protection bit
  2128                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2129                           ;	Table Read Protection bit
  2130                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2131                           ;	Table Read Protection bit
  2132                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2133                           ;	Table Read Protection bit
  2134                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2135   30000C                     	org	3145740
  2136   30000C  0F                 	db	15
  2137                           
  2138                           ;Config register CONFIG7H @ 0x30000D
  2139                           ;	Boot Block Table Read Protection bit
  2140                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2141   30000D                     	org	3145741
  2142   30000D  40                 	db	64
  2143                           tosu	equ	0xFFF
  2144                           tosh	equ	0xFFE
  2145                           tosl	equ	0xFFD
  2146                           stkptr	equ	0xFFC
  2147                           pclatu	equ	0xFFB
  2148                           pclath	equ	0xFFA
  2149                           pcl	equ	0xFF9
  2150                           tblptru	equ	0xFF8
  2151                           tblptrh	equ	0xFF7
  2152                           tblptrl	equ	0xFF6
  2153                           tablat	equ	0xFF5
  2154                           prodh	equ	0xFF4
  2155                           prodl	equ	0xFF3
  2156                           indf0	equ	0xFEF
  2157                           postinc0	equ	0xFEE
  2158                           postdec0	equ	0xFED
  2159                           preinc0	equ	0xFEC
  2160                           plusw0	equ	0xFEB
  2161                           fsr0h	equ	0xFEA
  2162                           fsr0l	equ	0xFE9
  2163                           wreg	equ	0xFE8
  2164                           indf1	equ	0xFE7
  2165                           postinc1	equ	0xFE6
  2166                           postdec1	equ	0xFE5
  2167                           preinc1	equ	0xFE4
  2168                           plusw1	equ	0xFE3
  2169                           fsr1h	equ	0xFE2
  2170                           fsr1l	equ	0xFE1
  2171                           bsr	equ	0xFE0
  2172                           indf2	equ	0xFDF
  2173                           postinc2	equ	0xFDE
  2174                           postdec2	equ	0xFDD
  2175                           preinc2	equ	0xFDC
  2176                           plusw2	equ	0xFDB
  2177                           fsr2h	equ	0xFDA
  2178                           fsr2l	equ	0xFD9
  2179                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    16
    Data        32
    BSS         31
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     17      80
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    S2206$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2206$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    Data_EEPROM_ReadByte@bData	PTR unsigned char  size(2) Largest target is 1
		 -> value(COMRAM[1]), 

    Interrupt_INTx_SetInterruptHandler@interrupt_obj.Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Clear_Flag@interrupt_obj.Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Pin@interrupt_obj.Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Edge_init@interrupt_obj.Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Disable@interrupt_obj.Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    S1109$Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Enable@interrupt_obj.Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    S1242$Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@interrupt_obj.Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    RB7_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    gpio_pin_write_logic@_pin_config_t	PTR const struct . size(2) Largest target is 1
		 -> relay_turn_off@relayy(COMRAM[1]), relay_turn_on@relayy(COMRAM[1]), relay_initialize@relayy(COMRAM[1]), led_turn_off@pin_obj(COMRAM[1]), 
		 -> led_turn_on@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), Dc_motor_stop@dc_motor_pin_2(COMRAM[1]), Dc_motor_stop@dc_motor_pin_1(COMRAM[1]), 
		 -> Dc_motor_turn_right@dc_motor_pin_2(COMRAM[1]), Dc_motor_turn_right@dc_motor_pin_1(COMRAM[1]), Dc_motor_turn_left@dc_motor_pin_2(COMRAM[1]), Dc_motor_turn_left@dc_motor_pin_1(COMRAM[1]), 
		 -> Dc_motor_initialize@dc_motor_pin_2(COMRAM[1]), Dc_motor_initialize@dc_motor_pin_1(COMRAM[1]), 

    gpio_pin_direction_init@_pin_config_t	PTR const struct . size(2) Largest target is 1
		 -> relay_initialize@relayy(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), Dc_motor_initialize@dc_motor_pin_2(COMRAM[1]), Dc_motor_initialize@dc_motor_pin_1(COMRAM[1]), 

    port_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRllll[1]), PORTD(BITBIGSFRllll[1]), PORTC(BITBIGSFRllll[1]), PORTB(BITBIGSFRllll[1]), 
		 -> PORTA(BITBIGSFRllll[1]), 

    lat_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlllh[1]), LATD(BITBIGSFRlllh[1]), LATC(BITBIGSFRlllh[1]), LATB(BITBIGSFRlllh[1]), 
		 -> LATA(BITBIGSFRllll[1]), 

    tris_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISD(ABS[1]), TRISC(ABS[1]), TRISB(ABS[1]), TRISE(ABS[1]), 
		 -> TRISA(BITBIGSFRllll[1]), 

    adc_select_vol_ref@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    adc_select_result_format@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    ADC_GetConversion_Status_Result@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S743$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    ADC_Init@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    led_turn_on@led	PTR const struct . size(2) Largest target is 1
		 -> led0(COMRAM[1]), 

    led_initialize@led	PTR const struct . size(2) Largest target is 1
		 -> led0(COMRAM[1]), 

    sp__memset	PTR void  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _main->_led_turn_on
    _led_turn_on->_gpio_pin_write_logic
    _Application_initialize->_led_initialize
    _led_initialize->_gpio_pin_write_logic

Critical Paths under _InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   21556
                                             15 COMRAM     2     2      0
             _Application_initialize
               _Data_EEPROM_ReadByte
              _Data_EEPROM_WriteByte
                        _led_turn_on
 ---------------------------------------------------------------------------------
 (1) _led_turn_on                                          5     3      2    9542
                                             10 COMRAM     5     3      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _Data_EEPROM_WriteByte                                7     4      3     464
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (1) _Data_EEPROM_ReadByte                                 7     3      4     312
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _Application_initialize                               0     0      0   11238
                     _led_initialize
 ---------------------------------------------------------------------------------
 (2) _led_initialize                                       5     3      2   11238
                                             10 COMRAM     5     3      2
            _gpio_pin_direction_init
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_write_logic                                10     7      3    9321
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_init                              9     7      2    1645
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _InterruptManager                                     0     0      0       0
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
 ---------------------------------------------------------------------------------
 (5) _RB7_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _RB6_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _RB5_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _RB4_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Application_initialize
     _led_initialize
       _gpio_pin_direction_init
       _gpio_pin_write_logic
   _Data_EEPROM_ReadByte
   _Data_EEPROM_WriteByte
   _led_turn_on
     _gpio_pin_write_logic

 _InterruptManager (ROOT)
   _INT0_ISR
   _INT1_ISR
   _INT2_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      43        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     11      50       1       63.5%
BITBIGSFRhhll       2B      0       0      37        0.0%
BITBIGSFRllhhh      15      0       0      38        0.0%
BITBIGSFRllhhll      F      0       0      39        0.0%
BITBIGSFRhhh         D      0       0      36        0.0%
BITBIGSFRlllh        4      0       0      40        0.0%
BITBIGSFRllll        4      0       0      41        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      50      42        0.0%
DATA                 0      0      50       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Oct 13 00:17:53 2022

                          ??_InterruptManager 0040                                           l500 12C0  
                                         l290 1496                                           l283 13FE  
                                         l294 14F6                                           l287 1476  
                                         l481 1176                                           l820 15DA  
                                         l821 15E8                                           l830 1658  
                                         l818 15CC                                           l797 16BE  
                                         _ret 001F                           led_initialize@F3043 0036  
                                         prod 000FF3                         relay_initialize@F3037 0032  
                                         wreg 000FE8                                  ?_led_turn_on 004A  
                   _Data_EEPROM_ReadByte$1761 0045                     _Data_EEPROM_ReadByte$1762 0046  
                             __end_of_RB4_ISR 16D0                               __end_of_RB5_ISR 16CC  
                             __end_of_RB6_ISR 16C8                               __end_of_RB7_ISR 16C4  
                                        l3111 147C                                          l3041 13F6  
                                        l3121 14E4                                          l3113 148E  
                                        l3051 1458                                          l3043 1402  
                                        l3131 1572                                          l3115 149A  
                                        l3123 14F4                                          l3045 1438  
                                        l3053 1474                                          l3037 13E0  
                                        l3141 159C                                          l3133 157A  
                                        l3117 14D0                                          l3109 1478  
                                        l3047 143A                                          l3039 13E4  
                                        l3127 16B0                                          l3151 15BC  
                                        l3143 15AE                                          l3135 157E  
                                        l3119 14D2                                          l3049 144C  
                                        l3153 15BE                                          l3145 15B2  
                                        l3137 1590                                          l3129 1572  
                                        l3171 160C                                          l3163 15EA  
                                        l3155 15C0                                          l3147 15B6  
                                        l3139 1594                                          l3181 1640  
                                        l3173 161E                                          l3165 15EE  
                                        l3157 15CA                                          l3149 15BA  
                                        l3183 1644                                          l3175 1622  
                                        l3191 1656                                          l3167 1600  
                                        l3159 15E6                                          l3185 1646  
                                        l3177 162A                                          l3169 1608  
                                        l3187 1648                                          l3179 163C  
                                        l3189 164A                                          l2941 106C  
                                        l2933 1016                                          l2943 1074  
                                        l2951 1174                                          l2935 101A  
                                        l3751 14F8                                          l2945 10D6  
                                        l2937 102C                                          l2961 117C  
                                        l3761 1536                                          l3753 14FC  
                                        l2939 104A                                          l2971 1238  
                                        l2963 118E                                          l3763 154A  
                                        l3755 150C                                          l2949 1132  
                                        l2965 11AC                                          l3765 155C  
                                        l3757 150E                                          l3775 12A8  
                                        l2975 1294                                          l2967 11CE  
                                        l2959 1178                                          l3759 151E  
                                        l3777 115E                                          l2969 11D6  
                                        l2977 12BE                       ??_Data_EEPROM_WriteByte 0043  
                                        STR_1 1011                                          _LATA 000F89  
                                        _LATB 000F8A                                          _LATC 000F8B  
                                        _LATD 000F8C                                          _LATE 000F8D  
                                        u1710 114A                                          u1711 1144  
                                        u1720 114C                                          u1704 10F6  
                                        u1705 10F2                                          u1730 118E  
                                        u1731 118A                                          u2507 1528  
                                        u1660 102C                                          u1740 11AC  
                                        u1820 13F6                                          u1900 1590  
                                        u1661 1028                                          u1741 11A8  
                                        u1821 13F2                                          u1901 158C  
                                        u1670 104A                                          u1750 11CE  
                                        u1910 15AE                                          u1671 1046  
                                        u1751 11CA                                          u1911 15AA  
                                        u1680 106C                                          u1920 15DA  
                                        u1681 1068                                          u1921 15D6  
                                        u2490 155C                                          u1835 144A  
                                        u2491 1558                                          u1764 11F6  
                                        u1940 1600                                          u1765 11F2  
                                        u1837 144C                                          u1941 15FC  
                                        u1694 1094                                          u1774 1258  
                                        u1950 161E                                          u1695 1090  
                                        u1775 1254                                          u1951 161A  
                                        u1935 15E4                                          u1960 163C  
                                        u1936 15E6                                          u1880 148E  
                                        u1961 1638                                          u1881 148A  
                                        u1895 14E2                                          u1897 14E4  
                                        _led0 0020                                          _main 14F8  
                                        fsr2h 000FDA                                          indf2 000FDF  
                                        fsr1l 000FE1                                          fsr2l 000FD9  
                    ?_gpio_pin_direction_init 0040                                          btemp 0051  
                      __end_of_led_initialize 1478                                          prodl 000FF3  
                                        start 000E                          _RB7_InterruptHandler 0021  
                                ___param_bank 000000                          _gpio_pin_write_logic 1178  
                            __end_of_INT0_ISR 16DC                              __end_of_INT1_ISR 16D8  
                            __end_of_INT2_ISR 16D4                                         ?_main 0040  
                                       _EEADR 000FA9                                         i2l602 16CA  
                                       i2l610 16C2                                         i2l606 16C6  
                                       i2l590 16D6                                         i2l586 16DA  
                                       i2l594 16D2                                         i2l765 13DC  
                                       i2l598 16CE                           relay_turn_off@F3047 0030  
                                       _PORTA 000F80                                         _PORTB 000F81  
                                       _PORTC 000F82                                         _PORTD 000F83  
                                       _PORTE 000F84                                         _TRISA 000F92  
                                       _TRISB 000F93                                         _TRISC 000F94  
                                       _TRISD 000F95                                         _TRISE 000F96  
                                       _value 003F                                         tablat 000FF5  
                                       ttemp5 0052                                         ttemp6 0055  
                                       ttemp7 0059                                         status 000FD8  
                                       wtemp8 0052                               ?_led_initialize 004A  
                __end_of_Data_EEPROM_ReadByte 165A                               __initialization 165A  
                                __end_of_main 1572                         ?_gpio_pin_write_logic 0040  
                                      ??_main 004F                                 __activetblptr 000003  
                            led_turn_on@F3048 0035                                     ??_RB4_ISR 0040  
                                   ??_RB5_ISR 0040                                     ??_RB6_ISR 0040  
                                   ??_RB7_ISR 0040                                        _ADRESH 000FC4  
                                      _EEADRH 000FAA                                        _ADRESL 000FC3  
                                      _EEDATA 000FA8                                        _EECON2 000FA7  
                                      i2l1755 16D8                                        i2l1763 16D0  
                                      i2l1771 16C8                                        i2l2901 13AE  
                                      i2l1759 16D4                                        i2l1767 16CC  
                                      i2l1775 16C4                                        i2l2903 13BC  
                                      i2l2905 13CA                                        i2l1779 16C0  
                                      i2l2907 13D8                                        i2l2861 12D2  
                                      i2l2871 1304                                        i2l2863 12E0  
                                      i2l2881 1340                                        i2l2873 1312  
                                      i2l2865 12E4                                        i2l2891 137C  
                                      i2l2883 134E                                        i2l2875 1320  
                                      i2l2867 12F2                                        i2l2859 12C4  
                                      i2l2893 1380                                        i2l2885 1352  
                                      i2l2877 1324                                        i2l2869 1300  
                                      i2l2895 138E                                        i2l2887 1360  
                                      i2l2879 1332                                        i2l2897 139C  
                                      i2l2889 136E                                        i2l2899 13AA  
                               _tris_register 0015                       ?_Application_initialize 0040  
                                      clear_0 1680                         led_initialize@pin_obj 004E  
                                      isa$std 000001                                  __pdataCOMRAM 0001  
                                __mediumconst 0000                                        tblptrh 000FF7  
                                      tblptrl 000FF6                                        tblptru 000FF8  
                                  __accesstop 0080                       __end_of__initialization 1686  
                                   ?_INT0_ISR 0040                                     ?_INT1_ISR 0040  
                                   ?_INT2_ISR 0040                                 ___rparam_used 000001  
                           led_initialize@led 004A                             led_initialize@ret 004D  
                      ??_gpio_pin_write_logic 0043                                __pcstackCOMRAM 0040  
              __end_of_Application_initialize 16C0                    _Data_EEPROM_WriteByte$1747 0044  
                  _Data_EEPROM_WriteByte$1748 0045                       Data_EEPROM_ReadByte@ret 0044  
                        _Data_EEPROM_ReadByte 15EA                 __end_of_Data_EEPROM_WriteByte 15EA  
                       _INT0_InterruptHandler 002D                                    ??_INT0_ISR 0040  
                                  ??_INT1_ISR 0040                                    ??_INT2_ISR 0040  
                           led_turn_off@F3053 0034                      Dc_motor_initialize@F3042 003E  
                    Dc_motor_initialize@F3044 003D                                       _RB4_ISR 16CC  
                                     _RB5_ISR 16C8                         ?_Data_EEPROM_ReadByte 0040  
                                     _RB6_ISR 16C4                                       _RB7_ISR 16C0  
                            ??_led_initialize 004C                                    _btn_values 1001  
                                     __Hparam 0000                                       __Lparam 0000  
                                  _epprom_cnt 002F                                  __psmallconst 1000  
                                     __pcinit 165A                                       __ramtop 1000  
                                     __ptext0 14F8                                       __ptext1 1478  
                                     __ptext2 1572                                       __ptext3 15EA  
                                     __ptext4 16B0                                       __ptext5 13E0  
                                     __ptext6 1178                                       __ptext7 1016  
                                     __ptext9 16C0                                __pintcode_body 12C2  
                        end_of_initialization 1686                                       int_func 12C2  
           gpio_pin_write_logic@_pin_config_t 0040                                       postdec1 000FE5  
                                     postdec2 000FDD                                       postinc0 000FEE  
                                     postinc2 000FDE                         _INT1_InterruptHandler 002B  
                                   _PORTBbits 000F81                        ??_Data_EEPROM_ReadByte 0044  
                            _InterruptManager 0008                            relay_turn_on@F3042 0031  
                     _gpio_pin_direction_init 1016                                 __pidataCOMRAM 1690  
                         start_initialization 165A                                 ??_led_turn_on 004C  
                        _RB4_InterruptHandler 0027                                  _lat_register 000B  
                    Data_EEPROM_ReadByte@bAdd 0040                                      ?_RB4_ISR 0040  
                                    ?_RB5_ISR 0040                                      ?_RB6_ISR 0040  
                                    ?_RB7_ISR 0040                                   __pbssCOMRAM 0021  
                         __end_of_led_turn_on 14F8                         _INT2_InterruptHandler 0029  
                       _Data_EEPROM_WriteByte 1572                     ??_gpio_pin_direction_init 0042  
                                   __pintcode 0008                     gpio_pin_write_logic@logic 0042  
                                 __smallconst 1000                                      _INT0_ISR 16D8  
                                    _INT1_ISR 16D4                                      _INT2_ISR 16D0  
                    ??_Application_initialize 004F                      __end_of_InterruptManager 13E0  
                                    i2u150_40 1300                                      i2u150_41 12FC  
                                    i2u151_40 1312                                      i2u151_41 130E  
                                    i2u160_40 139C                                      i2u152_40 1320  
                                    i2u160_41 1398                                      i2u152_41 131C  
                                    i2u161_40 13AA                                      i2u153_40 1332  
                                    i2u161_41 13A6                                      i2u153_41 132E  
                                    i2u162_40 13BC                                      i2u154_40 1340  
                                    i2u162_41 13B8                                      i2u154_41 133C  
                                    i2u163_40 13CA                                      i2u155_40 134E  
                                    i2u147_40 12D2                                      i2u163_41 13C6  
                                    i2u155_41 134A                                      i2u147_41 12CE  
                                    i2u164_40 13D8                                      i2u156_40 1360  
                                    i2u148_40 12E0                                      i2u164_41 13D4  
                                    i2u156_41 135C                                      i2u148_41 12DC  
                                    i2u157_40 136E                                      i2u149_40 12F2  
                                    i2u157_41 136A                                      i2u149_41 12EE  
                                    i2u158_40 137C                                      i2u158_41 1378  
                                    i2u159_40 138E                                      i2u159_41 138A  
                        _RB5_InterruptHandler 0025                            led_turn_on@pin_obj 004E  
                                  _ADCON0bits 000FC2                                    _ADCON1bits 000FC1  
                                  _ADCON2bits 000FC0                         led_toggle_logic@F3058 0033  
                   Data_EEPROM_ReadByte@bData 0042               __end_of_gpio_pin_direction_init 1178  
                                 _led_turn_on 1478                       gpio_pin_write_logic@ret 0049  
                                 _INTCON2bits 000FF1  Data_EEPROM_WriteByte@Global_Interrupt_Status 0043  
                                 _INTCON3bits 000FF0                                     copy_data0 166E  
                          Dc_motor_stop@F3065 0038                            Dc_motor_stop@F3067 0037  
                      ?_Data_EEPROM_WriteByte 0040                                    _EECON1bits 000FA6  
                              led_turn_on@led 004A                                led_turn_on@ret 004D  
                                    __Hrparam 0000                                      __Lrparam 0000  
                          __end_of_btn_values 1011                                      __ptext10 16C4  
                                    __ptext11 16C8                                      __ptext12 16CC  
                                    __ptext13 16D0                                      __ptext14 16D4  
                                    __ptext15 16D8                       Dc_motor_turn_left@F3051 003C  
                     Dc_motor_turn_left@F3053 003B                                      isa$xinst 000000  
                                    int$flags 0051          gpio_pin_direction_init@_pin_config_t 0040  
                                  _INTCONbits 000FF2                          _RB6_InterruptHandler 0023  
                __end_of_gpio_pin_write_logic 12C2                      Dc_motor_turn_right@F3060 0039  
                    Dc_motor_turn_right@F3058 003A                                      intlevel2 0000  
                  Data_EEPROM_WriteByte@bData 0042                        _Application_initialize 16B0  
                   Data_EEPROM_WriteByte@bAdd 0040                    gpio_pin_direction_init@ret 0048  
                               _port_register 0001                             ?_InterruptManager 0040  
                              _led_initialize 13E0  
